"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateDependencies = updateDependencies;
exports.initGenerator = initGenerator;
const devkit_1 = require("@nx/devkit");
const add_plugin_1 = require("@nx/devkit/src/utils/add-plugin");
const plugin_1 = require("../../plugins/plugin");
const versions_1 = require("../../utils/versions");
function updateDependencies(tree, schema) {
    return (0, devkit_1.addDependenciesToPackageJson)(tree, {}, {
        '@nx/docker': versions_1.nxVersion,
    }, undefined, schema.keepExistingVersions);
}
async function initGenerator(tree, schema) {
    devkit_1.logger.warn(`Docker support is experimental. Breaking changes may occur and not adhere to semver versioning.`);
    const nxJson = (0, devkit_1.readNxJson)(tree);
    await (0, add_plugin_1.addPlugin)(tree, await (0, devkit_1.createProjectGraphAsync)(), '@nx/docker', plugin_1.createNodesV2, {
        buildTarget: ['docker:build', 'docker-build', 'build-docker'],
        runTarget: ['docker:run', 'docker-run', 'run-docker'],
    }, schema.updatePackageScripts);
    const tasks = [];
    if (!schema.skipPackageJson) {
        tasks.push(updateDependencies(tree, schema));
    }
    if (!schema.skipFormat) {
        await (0, devkit_1.formatFiles)(tree);
    }
    return (0, devkit_1.runTasksInSerial)(...tasks);
}
exports.default = initGenerator;
