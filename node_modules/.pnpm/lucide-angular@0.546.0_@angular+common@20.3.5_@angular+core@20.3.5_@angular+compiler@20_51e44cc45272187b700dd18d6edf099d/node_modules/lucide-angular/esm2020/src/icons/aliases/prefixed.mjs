// AArrowDown aliases
export { default as LucideAArrowDown } from '../icons/a-arrow-down';
// AArrowUp aliases
export { default as LucideAArrowUp } from '../icons/a-arrow-up';
// ALargeSmall aliases
export { default as LucideALargeSmall } from '../icons/a-large-small';
// Accessibility aliases
export { default as LucideAccessibility } from '../icons/accessibility';
// Activity aliases
export { default as LucideActivity } from '../icons/activity';
// AirVent aliases
export { default as LucideAirVent } from '../icons/air-vent';
// Airplay aliases
export { default as LucideAirplay } from '../icons/airplay';
// AlarmClock aliases
export { default as LucideAlarmClock } from '../icons/alarm-clock';
// AlarmClockOff aliases
export { default as LucideAlarmClockOff } from '../icons/alarm-clock-off';
// AlarmSmoke aliases
export { default as LucideAlarmSmoke } from '../icons/alarm-smoke';
// Album aliases
export { default as LucideAlbum } from '../icons/album';
// AlignCenterHorizontal aliases
export { default as LucideAlignCenterHorizontal } from '../icons/align-center-horizontal';
// AlignCenterVertical aliases
export { default as LucideAlignCenterVertical } from '../icons/align-center-vertical';
// AlignEndVertical aliases
export { default as LucideAlignEndVertical } from '../icons/align-end-vertical';
// AlignEndHorizontal aliases
export { default as LucideAlignEndHorizontal } from '../icons/align-end-horizontal';
// AlignHorizontalDistributeEnd aliases
export { default as LucideAlignHorizontalDistributeEnd } from '../icons/align-horizontal-distribute-end';
// AlignHorizontalDistributeCenter aliases
export { default as LucideAlignHorizontalDistributeCenter } from '../icons/align-horizontal-distribute-center';
// AlignHorizontalDistributeStart aliases
export { default as LucideAlignHorizontalDistributeStart } from '../icons/align-horizontal-distribute-start';
// AlignHorizontalJustifyCenter aliases
export { default as LucideAlignHorizontalJustifyCenter } from '../icons/align-horizontal-justify-center';
// AlignHorizontalJustifyEnd aliases
export { default as LucideAlignHorizontalJustifyEnd } from '../icons/align-horizontal-justify-end';
// AlignHorizontalJustifyStart aliases
export { default as LucideAlignHorizontalJustifyStart } from '../icons/align-horizontal-justify-start';
// AlignHorizontalSpaceAround aliases
export { default as LucideAlignHorizontalSpaceAround } from '../icons/align-horizontal-space-around';
// AlignHorizontalSpaceBetween aliases
export { default as LucideAlignHorizontalSpaceBetween } from '../icons/align-horizontal-space-between';
// AlignStartHorizontal aliases
export { default as LucideAlignStartHorizontal } from '../icons/align-start-horizontal';
// AlignStartVertical aliases
export { default as LucideAlignStartVertical } from '../icons/align-start-vertical';
// AlignVerticalDistributeCenter aliases
export { default as LucideAlignVerticalDistributeCenter } from '../icons/align-vertical-distribute-center';
// AlignVerticalDistributeEnd aliases
export { default as LucideAlignVerticalDistributeEnd } from '../icons/align-vertical-distribute-end';
// AlignVerticalDistributeStart aliases
export { default as LucideAlignVerticalDistributeStart } from '../icons/align-vertical-distribute-start';
// AlignVerticalJustifyEnd aliases
export { default as LucideAlignVerticalJustifyEnd } from '../icons/align-vertical-justify-end';
// AlignVerticalJustifyStart aliases
export { default as LucideAlignVerticalJustifyStart } from '../icons/align-vertical-justify-start';
// AlignVerticalJustifyCenter aliases
export { default as LucideAlignVerticalJustifyCenter } from '../icons/align-vertical-justify-center';
// AlignVerticalSpaceAround aliases
export { default as LucideAlignVerticalSpaceAround } from '../icons/align-vertical-space-around';
// AlignVerticalSpaceBetween aliases
export { default as LucideAlignVerticalSpaceBetween } from '../icons/align-vertical-space-between';
// Ambulance aliases
export { default as LucideAmbulance } from '../icons/ambulance';
// Ampersand aliases
export { default as LucideAmpersand } from '../icons/ampersand';
// Ampersands aliases
export { default as LucideAmpersands } from '../icons/ampersands';
// Amphora aliases
export { default as LucideAmphora } from '../icons/amphora';
// Anchor aliases
export { default as LucideAnchor } from '../icons/anchor';
// Angry aliases
export { default as LucideAngry } from '../icons/angry';
// Annoyed aliases
export { default as LucideAnnoyed } from '../icons/annoyed';
// Antenna aliases
export { default as LucideAntenna } from '../icons/antenna';
// Aperture aliases
export { default as LucideAperture } from '../icons/aperture';
// Anvil aliases
export { default as LucideAnvil } from '../icons/anvil';
// AppWindowMac aliases
export { default as LucideAppWindowMac } from '../icons/app-window-mac';
// AppWindow aliases
export { default as LucideAppWindow } from '../icons/app-window';
// ArchiveRestore aliases
export { default as LucideArchiveRestore } from '../icons/archive-restore';
// ArchiveX aliases
export { default as LucideArchiveX } from '../icons/archive-x';
// Apple aliases
export { default as LucideApple } from '../icons/apple';
// Archive aliases
export { default as LucideArchive } from '../icons/archive';
// Armchair aliases
export { default as LucideArmchair } from '../icons/armchair';
// ArrowBigDownDash aliases
export { default as LucideArrowBigDownDash } from '../icons/arrow-big-down-dash';
// ArrowBigDown aliases
export { default as LucideArrowBigDown } from '../icons/arrow-big-down';
// ArrowBigLeftDash aliases
export { default as LucideArrowBigLeftDash } from '../icons/arrow-big-left-dash';
// ArrowBigLeft aliases
export { default as LucideArrowBigLeft } from '../icons/arrow-big-left';
// ArrowBigRightDash aliases
export { default as LucideArrowBigRightDash } from '../icons/arrow-big-right-dash';
// ArrowBigRight aliases
export { default as LucideArrowBigRight } from '../icons/arrow-big-right';
// ArrowBigUpDash aliases
export { default as LucideArrowBigUpDash } from '../icons/arrow-big-up-dash';
// ArrowBigUp aliases
export { default as LucideArrowBigUp } from '../icons/arrow-big-up';
// ArrowDownFromLine aliases
export { default as LucideArrowDownFromLine } from '../icons/arrow-down-from-line';
// ArrowDownLeft aliases
export { default as LucideArrowDownLeft } from '../icons/arrow-down-left';
// ArrowDownNarrowWide aliases
export { default as LucideArrowDownNarrowWide } from '../icons/arrow-down-narrow-wide';
// ArrowDownRight aliases
export { default as LucideArrowDownRight } from '../icons/arrow-down-right';
// ArrowDownToDot aliases
export { default as LucideArrowDownToDot } from '../icons/arrow-down-to-dot';
// ArrowDownToLine aliases
export { default as LucideArrowDownToLine } from '../icons/arrow-down-to-line';
// ArrowDownUp aliases
export { default as LucideArrowDownUp } from '../icons/arrow-down-up';
// ArrowDown aliases
export { default as LucideArrowDown } from '../icons/arrow-down';
// ArrowLeftFromLine aliases
export { default as LucideArrowLeftFromLine } from '../icons/arrow-left-from-line';
// ArrowLeftRight aliases
export { default as LucideArrowLeftRight } from '../icons/arrow-left-right';
// ArrowLeftToLine aliases
export { default as LucideArrowLeftToLine } from '../icons/arrow-left-to-line';
// ArrowRightFromLine aliases
export { default as LucideArrowRightFromLine } from '../icons/arrow-right-from-line';
// ArrowLeft aliases
export { default as LucideArrowLeft } from '../icons/arrow-left';
// ArrowRightLeft aliases
export { default as LucideArrowRightLeft } from '../icons/arrow-right-left';
// ArrowRightToLine aliases
export { default as LucideArrowRightToLine } from '../icons/arrow-right-to-line';
// ArrowRight aliases
export { default as LucideArrowRight } from '../icons/arrow-right';
// ArrowUpDown aliases
export { default as LucideArrowUpDown } from '../icons/arrow-up-down';
// ArrowUpFromDot aliases
export { default as LucideArrowUpFromDot } from '../icons/arrow-up-from-dot';
// ArrowUpFromLine aliases
export { default as LucideArrowUpFromLine } from '../icons/arrow-up-from-line';
// ArrowUpLeft aliases
export { default as LucideArrowUpLeft } from '../icons/arrow-up-left';
// ArrowUpRight aliases
export { default as LucideArrowUpRight } from '../icons/arrow-up-right';
// ArrowUpToLine aliases
export { default as LucideArrowUpToLine } from '../icons/arrow-up-to-line';
// ArrowUpWideNarrow aliases
export { default as LucideArrowUpWideNarrow } from '../icons/arrow-up-wide-narrow';
// ArrowUp aliases
export { default as LucideArrowUp } from '../icons/arrow-up';
// ArrowsUpFromLine aliases
export { default as LucideArrowsUpFromLine } from '../icons/arrows-up-from-line';
// Asterisk aliases
export { default as LucideAsterisk } from '../icons/asterisk';
// AtSign aliases
export { default as LucideAtSign } from '../icons/at-sign';
// Atom aliases
export { default as LucideAtom } from '../icons/atom';
// AudioLines aliases
export { default as LucideAudioLines } from '../icons/audio-lines';
// AudioWaveform aliases
export { default as LucideAudioWaveform } from '../icons/audio-waveform';
// Award aliases
export { default as LucideAward } from '../icons/award';
// Axe aliases
export { default as LucideAxe } from '../icons/axe';
// Baby aliases
export { default as LucideBaby } from '../icons/baby';
// Backpack aliases
export { default as LucideBackpack } from '../icons/backpack';
// BadgeAlert aliases
export { default as LucideBadgeAlert } from '../icons/badge-alert';
// BadgeCent aliases
export { default as LucideBadgeCent } from '../icons/badge-cent';
// BadgeDollarSign aliases
export { default as LucideBadgeDollarSign } from '../icons/badge-dollar-sign';
// BadgeEuro aliases
export { default as LucideBadgeEuro } from '../icons/badge-euro';
// BadgeIndianRupee aliases
export { default as LucideBadgeIndianRupee } from '../icons/badge-indian-rupee';
// BadgeJapaneseYen aliases
export { default as LucideBadgeJapaneseYen } from '../icons/badge-japanese-yen';
// BadgeInfo aliases
export { default as LucideBadgeInfo } from '../icons/badge-info';
// BadgeMinus aliases
export { default as LucideBadgeMinus } from '../icons/badge-minus';
// BadgePercent aliases
export { default as LucideBadgePercent } from '../icons/badge-percent';
// BadgePlus aliases
export { default as LucideBadgePlus } from '../icons/badge-plus';
// BadgePoundSterling aliases
export { default as LucideBadgePoundSterling } from '../icons/badge-pound-sterling';
// BadgeRussianRuble aliases
export { default as LucideBadgeRussianRuble } from '../icons/badge-russian-ruble';
// BadgeSwissFranc aliases
export { default as LucideBadgeSwissFranc } from '../icons/badge-swiss-franc';
// BadgeTurkishLira aliases
export { default as LucideBadgeTurkishLira } from '../icons/badge-turkish-lira';
// BadgeX aliases
export { default as LucideBadgeX } from '../icons/badge-x';
// Badge aliases
export { default as LucideBadge } from '../icons/badge';
// BaggageClaim aliases
export { default as LucideBaggageClaim } from '../icons/baggage-claim';
// Ban aliases
export { default as LucideBan } from '../icons/ban';
// Banana aliases
export { default as LucideBanana } from '../icons/banana';
// Bandage aliases
export { default as LucideBandage } from '../icons/bandage';
// BanknoteArrowDown aliases
export { default as LucideBanknoteArrowDown } from '../icons/banknote-arrow-down';
// BanknoteX aliases
export { default as LucideBanknoteX } from '../icons/banknote-x';
// BanknoteArrowUp aliases
export { default as LucideBanknoteArrowUp } from '../icons/banknote-arrow-up';
// Banknote aliases
export { default as LucideBanknote } from '../icons/banknote';
// Barcode aliases
export { default as LucideBarcode } from '../icons/barcode';
// Barrel aliases
export { default as LucideBarrel } from '../icons/barrel';
// Baseline aliases
export { default as LucideBaseline } from '../icons/baseline';
// Bath aliases
export { default as LucideBath } from '../icons/bath';
// BatteryCharging aliases
export { default as LucideBatteryCharging } from '../icons/battery-charging';
// BatteryFull aliases
export { default as LucideBatteryFull } from '../icons/battery-full';
// BatteryLow aliases
export { default as LucideBatteryLow } from '../icons/battery-low';
// BatteryMedium aliases
export { default as LucideBatteryMedium } from '../icons/battery-medium';
// BatteryPlus aliases
export { default as LucideBatteryPlus } from '../icons/battery-plus';
// BatteryWarning aliases
export { default as LucideBatteryWarning } from '../icons/battery-warning';
// Battery aliases
export { default as LucideBattery } from '../icons/battery';
// Beaker aliases
export { default as LucideBeaker } from '../icons/beaker';
// BeanOff aliases
export { default as LucideBeanOff } from '../icons/bean-off';
// Bean aliases
export { default as LucideBean } from '../icons/bean';
// BedDouble aliases
export { default as LucideBedDouble } from '../icons/bed-double';
// BedSingle aliases
export { default as LucideBedSingle } from '../icons/bed-single';
// Bed aliases
export { default as LucideBed } from '../icons/bed';
// Beef aliases
export { default as LucideBeef } from '../icons/beef';
// BeerOff aliases
export { default as LucideBeerOff } from '../icons/beer-off';
// Beer aliases
export { default as LucideBeer } from '../icons/beer';
// BellDot aliases
export { default as LucideBellDot } from '../icons/bell-dot';
// BellElectric aliases
export { default as LucideBellElectric } from '../icons/bell-electric';
// BellMinus aliases
export { default as LucideBellMinus } from '../icons/bell-minus';
// BellOff aliases
export { default as LucideBellOff } from '../icons/bell-off';
// BellPlus aliases
export { default as LucideBellPlus } from '../icons/bell-plus';
// BellRing aliases
export { default as LucideBellRing } from '../icons/bell-ring';
// Bell aliases
export { default as LucideBell } from '../icons/bell';
// BetweenVerticalEnd aliases
export { default as LucideBetweenVerticalEnd } from '../icons/between-vertical-end';
// BetweenVerticalStart aliases
export { default as LucideBetweenVerticalStart } from '../icons/between-vertical-start';
// BicepsFlexed aliases
export { default as LucideBicepsFlexed } from '../icons/biceps-flexed';
// Bike aliases
export { default as LucideBike } from '../icons/bike';
// Binary aliases
export { default as LucideBinary } from '../icons/binary';
// Binoculars aliases
export { default as LucideBinoculars } from '../icons/binoculars';
// Biohazard aliases
export { default as LucideBiohazard } from '../icons/biohazard';
// Bird aliases
export { default as LucideBird } from '../icons/bird';
// Bitcoin aliases
export { default as LucideBitcoin } from '../icons/bitcoin';
// Blend aliases
export { default as LucideBlend } from '../icons/blend';
// Blinds aliases
export { default as LucideBlinds } from '../icons/blinds';
// Blocks aliases
export { default as LucideBlocks } from '../icons/blocks';
// BluetoothOff aliases
export { default as LucideBluetoothOff } from '../icons/bluetooth-off';
// BluetoothConnected aliases
export { default as LucideBluetoothConnected } from '../icons/bluetooth-connected';
// BluetoothSearching aliases
export { default as LucideBluetoothSearching } from '../icons/bluetooth-searching';
// Bluetooth aliases
export { default as LucideBluetooth } from '../icons/bluetooth';
// Bold aliases
export { default as LucideBold } from '../icons/bold';
// Bolt aliases
export { default as LucideBolt } from '../icons/bolt';
// Bomb aliases
export { default as LucideBomb } from '../icons/bomb';
// Bone aliases
export { default as LucideBone } from '../icons/bone';
// BookA aliases
export { default as LucideBookA } from '../icons/book-a';
// BookAlert aliases
export { default as LucideBookAlert } from '../icons/book-alert';
// BookAudio aliases
export { default as LucideBookAudio } from '../icons/book-audio';
// BookCheck aliases
export { default as LucideBookCheck } from '../icons/book-check';
// BookCopy aliases
export { default as LucideBookCopy } from '../icons/book-copy';
// BookDown aliases
export { default as LucideBookDown } from '../icons/book-down';
// BookHeadphones aliases
export { default as LucideBookHeadphones } from '../icons/book-headphones';
// BookHeart aliases
export { default as LucideBookHeart } from '../icons/book-heart';
// BookImage aliases
export { default as LucideBookImage } from '../icons/book-image';
// BookKey aliases
export { default as LucideBookKey } from '../icons/book-key';
// BookLock aliases
export { default as LucideBookLock } from '../icons/book-lock';
// BookMarked aliases
export { default as LucideBookMarked } from '../icons/book-marked';
// BookMinus aliases
export { default as LucideBookMinus } from '../icons/book-minus';
// BookOpenCheck aliases
export { default as LucideBookOpenCheck } from '../icons/book-open-check';
// BookOpenText aliases
export { default as LucideBookOpenText } from '../icons/book-open-text';
// BookOpen aliases
export { default as LucideBookOpen } from '../icons/book-open';
// BookPlus aliases
export { default as LucideBookPlus } from '../icons/book-plus';
// BookText aliases
export { default as LucideBookText } from '../icons/book-text';
// BookType aliases
export { default as LucideBookType } from '../icons/book-type';
// BookUp2 aliases
export { default as LucideBookUp2 } from '../icons/book-up-2';
// BookUp aliases
export { default as LucideBookUp } from '../icons/book-up';
// BookUser aliases
export { default as LucideBookUser } from '../icons/book-user';
// BookX aliases
export { default as LucideBookX } from '../icons/book-x';
// Book aliases
export { default as LucideBook } from '../icons/book';
// BookmarkCheck aliases
export { default as LucideBookmarkCheck } from '../icons/bookmark-check';
// BookmarkMinus aliases
export { default as LucideBookmarkMinus } from '../icons/bookmark-minus';
// BookmarkPlus aliases
export { default as LucideBookmarkPlus } from '../icons/bookmark-plus';
// BookmarkX aliases
export { default as LucideBookmarkX } from '../icons/bookmark-x';
// Bookmark aliases
export { default as LucideBookmark } from '../icons/bookmark';
// BoomBox aliases
export { default as LucideBoomBox } from '../icons/boom-box';
// BotMessageSquare aliases
export { default as LucideBotMessageSquare } from '../icons/bot-message-square';
// BotOff aliases
export { default as LucideBotOff } from '../icons/bot-off';
// Bot aliases
export { default as LucideBot } from '../icons/bot';
// BottleWine aliases
export { default as LucideBottleWine } from '../icons/bottle-wine';
// BowArrow aliases
export { default as LucideBowArrow } from '../icons/bow-arrow';
// Box aliases
export { default as LucideBox } from '../icons/box';
// Boxes aliases
export { default as LucideBoxes } from '../icons/boxes';
// Brackets aliases
export { default as LucideBrackets } from '../icons/brackets';
// BrainCircuit aliases
export { default as LucideBrainCircuit } from '../icons/brain-circuit';
// BrainCog aliases
export { default as LucideBrainCog } from '../icons/brain-cog';
// Brain aliases
export { default as LucideBrain } from '../icons/brain';
// BrickWallShield aliases
export { default as LucideBrickWallShield } from '../icons/brick-wall-shield';
// BrickWall aliases
export { default as LucideBrickWall } from '../icons/brick-wall';
// BrickWallFire aliases
export { default as LucideBrickWallFire } from '../icons/brick-wall-fire';
// BriefcaseBusiness aliases
export { default as LucideBriefcaseBusiness } from '../icons/briefcase-business';
// BriefcaseConveyorBelt aliases
export { default as LucideBriefcaseConveyorBelt } from '../icons/briefcase-conveyor-belt';
// Briefcase aliases
export { default as LucideBriefcase } from '../icons/briefcase';
// BriefcaseMedical aliases
export { default as LucideBriefcaseMedical } from '../icons/briefcase-medical';
// BringToFront aliases
export { default as LucideBringToFront } from '../icons/bring-to-front';
// BrushCleaning aliases
export { default as LucideBrushCleaning } from '../icons/brush-cleaning';
// Brush aliases
export { default as LucideBrush } from '../icons/brush';
// Bubbles aliases
export { default as LucideBubbles } from '../icons/bubbles';
// BugOff aliases
export { default as LucideBugOff } from '../icons/bug-off';
// Bug aliases
export { default as LucideBug } from '../icons/bug';
// BugPlay aliases
export { default as LucideBugPlay } from '../icons/bug-play';
// Building2 aliases
export { default as LucideBuilding2 } from '../icons/building-2';
// Building aliases
export { default as LucideBuilding } from '../icons/building';
// BusFront aliases
export { default as LucideBusFront } from '../icons/bus-front';
// Bus aliases
export { default as LucideBus } from '../icons/bus';
// CableCar aliases
export { default as LucideCableCar } from '../icons/cable-car';
// Cable aliases
export { default as LucideCable } from '../icons/cable';
// CakeSlice aliases
export { default as LucideCakeSlice } from '../icons/cake-slice';
// Cake aliases
export { default as LucideCake } from '../icons/cake';
// Calendar1 aliases
export { default as LucideCalendar1 } from '../icons/calendar-1';
// Calculator aliases
export { default as LucideCalculator } from '../icons/calculator';
// CalendarArrowDown aliases
export { default as LucideCalendarArrowDown } from '../icons/calendar-arrow-down';
// CalendarArrowUp aliases
export { default as LucideCalendarArrowUp } from '../icons/calendar-arrow-up';
// CalendarCheck2 aliases
export { default as LucideCalendarCheck2 } from '../icons/calendar-check-2';
// CalendarCheck aliases
export { default as LucideCalendarCheck } from '../icons/calendar-check';
// CalendarCog aliases
export { default as LucideCalendarCog } from '../icons/calendar-cog';
// CalendarClock aliases
export { default as LucideCalendarClock } from '../icons/calendar-clock';
// CalendarFold aliases
export { default as LucideCalendarFold } from '../icons/calendar-fold';
// CalendarDays aliases
export { default as LucideCalendarDays } from '../icons/calendar-days';
// CalendarHeart aliases
export { default as LucideCalendarHeart } from '../icons/calendar-heart';
// CalendarMinus2 aliases
export { default as LucideCalendarMinus2 } from '../icons/calendar-minus-2';
// CalendarMinus aliases
export { default as LucideCalendarMinus } from '../icons/calendar-minus';
// CalendarOff aliases
export { default as LucideCalendarOff } from '../icons/calendar-off';
// CalendarPlus2 aliases
export { default as LucideCalendarPlus2 } from '../icons/calendar-plus-2';
// CalendarPlus aliases
export { default as LucideCalendarPlus } from '../icons/calendar-plus';
// CalendarRange aliases
export { default as LucideCalendarRange } from '../icons/calendar-range';
// CalendarSearch aliases
export { default as LucideCalendarSearch } from '../icons/calendar-search';
// CalendarSync aliases
export { default as LucideCalendarSync } from '../icons/calendar-sync';
// CalendarX2 aliases
export { default as LucideCalendarX2 } from '../icons/calendar-x-2';
// CalendarX aliases
export { default as LucideCalendarX } from '../icons/calendar-x';
// Calendar aliases
export { default as LucideCalendar } from '../icons/calendar';
// CameraOff aliases
export { default as LucideCameraOff } from '../icons/camera-off';
// Camera aliases
export { default as LucideCamera } from '../icons/camera';
// CandyCane aliases
export { default as LucideCandyCane } from '../icons/candy-cane';
// CandyOff aliases
export { default as LucideCandyOff } from '../icons/candy-off';
// Candy aliases
export { default as LucideCandy } from '../icons/candy';
// Cannabis aliases
export { default as LucideCannabis } from '../icons/cannabis';
// CaptionsOff aliases
export { default as LucideCaptionsOff } from '../icons/captions-off';
// CarFront aliases
export { default as LucideCarFront } from '../icons/car-front';
// CarTaxiFront aliases
export { default as LucideCarTaxiFront } from '../icons/car-taxi-front';
// Car aliases
export { default as LucideCar } from '../icons/car';
// Caravan aliases
export { default as LucideCaravan } from '../icons/caravan';
// CardSim aliases
export { default as LucideCardSim } from '../icons/card-sim';
// Carrot aliases
export { default as LucideCarrot } from '../icons/carrot';
// CaseLower aliases
export { default as LucideCaseLower } from '../icons/case-lower';
// CaseSensitive aliases
export { default as LucideCaseSensitive } from '../icons/case-sensitive';
// CaseUpper aliases
export { default as LucideCaseUpper } from '../icons/case-upper';
// CassetteTape aliases
export { default as LucideCassetteTape } from '../icons/cassette-tape';
// Castle aliases
export { default as LucideCastle } from '../icons/castle';
// Cast aliases
export { default as LucideCast } from '../icons/cast';
// Cat aliases
export { default as LucideCat } from '../icons/cat';
// Cctv aliases
export { default as LucideCctv } from '../icons/cctv';
// ChartBarDecreasing aliases
export { default as LucideChartBarDecreasing } from '../icons/chart-bar-decreasing';
// ChartBarIncreasing aliases
export { default as LucideChartBarIncreasing } from '../icons/chart-bar-increasing';
// ChartBarStacked aliases
export { default as LucideChartBarStacked } from '../icons/chart-bar-stacked';
// ChartColumnDecreasing aliases
export { default as LucideChartColumnDecreasing } from '../icons/chart-column-decreasing';
// ChartColumnStacked aliases
export { default as LucideChartColumnStacked } from '../icons/chart-column-stacked';
// ChartGantt aliases
export { default as LucideChartGantt } from '../icons/chart-gantt';
// ChartNetwork aliases
export { default as LucideChartNetwork } from '../icons/chart-network';
// ChartNoAxesColumnDecreasing aliases
export { default as LucideChartNoAxesColumnDecreasing } from '../icons/chart-no-axes-column-decreasing';
// ChartNoAxesCombined aliases
export { default as LucideChartNoAxesCombined } from '../icons/chart-no-axes-combined';
// ChartSpline aliases
export { default as LucideChartSpline } from '../icons/chart-spline';
// CheckCheck aliases
export { default as LucideCheckCheck } from '../icons/check-check';
// CheckLine aliases
export { default as LucideCheckLine } from '../icons/check-line';
// Check aliases
export { default as LucideCheck } from '../icons/check';
// ChefHat aliases
export { default as LucideChefHat } from '../icons/chef-hat';
// Cherry aliases
export { default as LucideCherry } from '../icons/cherry';
// ChevronDown aliases
export { default as LucideChevronDown } from '../icons/chevron-down';
// ChevronFirst aliases
export { default as LucideChevronFirst } from '../icons/chevron-first';
// ChevronLast aliases
export { default as LucideChevronLast } from '../icons/chevron-last';
// ChevronLeft aliases
export { default as LucideChevronLeft } from '../icons/chevron-left';
// ChevronRight aliases
export { default as LucideChevronRight } from '../icons/chevron-right';
// ChevronUp aliases
export { default as LucideChevronUp } from '../icons/chevron-up';
// ChevronsDownUp aliases
export { default as LucideChevronsDownUp } from '../icons/chevrons-down-up';
// ChevronsDown aliases
export { default as LucideChevronsDown } from '../icons/chevrons-down';
// ChevronsLeftRightEllipsis aliases
export { default as LucideChevronsLeftRightEllipsis } from '../icons/chevrons-left-right-ellipsis';
// ChevronsLeftRight aliases
export { default as LucideChevronsLeftRight } from '../icons/chevrons-left-right';
// ChevronsLeft aliases
export { default as LucideChevronsLeft } from '../icons/chevrons-left';
// ChevronsRightLeft aliases
export { default as LucideChevronsRightLeft } from '../icons/chevrons-right-left';
// ChevronsRight aliases
export { default as LucideChevronsRight } from '../icons/chevrons-right';
// ChevronsUpDown aliases
export { default as LucideChevronsUpDown } from '../icons/chevrons-up-down';
// ChevronsUp aliases
export { default as LucideChevronsUp } from '../icons/chevrons-up';
// Church aliases
export { default as LucideChurch } from '../icons/church';
// CigaretteOff aliases
export { default as LucideCigaretteOff } from '../icons/cigarette-off';
// Cigarette aliases
export { default as LucideCigarette } from '../icons/cigarette';
// CircleDashed aliases
export { default as LucideCircleDashed } from '../icons/circle-dashed';
// CircleDollarSign aliases
export { default as LucideCircleDollarSign } from '../icons/circle-dollar-sign';
// CircleDotDashed aliases
export { default as LucideCircleDotDashed } from '../icons/circle-dot-dashed';
// CircleDot aliases
export { default as LucideCircleDot } from '../icons/circle-dot';
// CircleEllipsis aliases
export { default as LucideCircleEllipsis } from '../icons/circle-ellipsis';
// CircleEqual aliases
export { default as LucideCircleEqual } from '../icons/circle-equal';
// CircleFadingArrowUp aliases
export { default as LucideCircleFadingArrowUp } from '../icons/circle-fading-arrow-up';
// CircleFadingPlus aliases
export { default as LucideCircleFadingPlus } from '../icons/circle-fading-plus';
// CircleOff aliases
export { default as LucideCircleOff } from '../icons/circle-off';
// CirclePoundSterling aliases
export { default as LucideCirclePoundSterling } from '../icons/circle-pound-sterling';
// CircleSlash aliases
export { default as LucideCircleSlash } from '../icons/circle-slash';
// CircleSmall aliases
export { default as LucideCircleSmall } from '../icons/circle-small';
// CircleStar aliases
export { default as LucideCircleStar } from '../icons/circle-star';
// Circle aliases
export { default as LucideCircle } from '../icons/circle';
// CircuitBoard aliases
export { default as LucideCircuitBoard } from '../icons/circuit-board';
// Citrus aliases
export { default as LucideCitrus } from '../icons/citrus';
// Clapperboard aliases
export { default as LucideClapperboard } from '../icons/clapperboard';
// ClipboardCheck aliases
export { default as LucideClipboardCheck } from '../icons/clipboard-check';
// ClipboardClock aliases
export { default as LucideClipboardClock } from '../icons/clipboard-clock';
// ClipboardCopy aliases
export { default as LucideClipboardCopy } from '../icons/clipboard-copy';
// ClipboardList aliases
export { default as LucideClipboardList } from '../icons/clipboard-list';
// ClipboardMinus aliases
export { default as LucideClipboardMinus } from '../icons/clipboard-minus';
// ClipboardPaste aliases
export { default as LucideClipboardPaste } from '../icons/clipboard-paste';
// ClipboardPlus aliases
export { default as LucideClipboardPlus } from '../icons/clipboard-plus';
// ClipboardX aliases
export { default as LucideClipboardX } from '../icons/clipboard-x';
// ClipboardType aliases
export { default as LucideClipboardType } from '../icons/clipboard-type';
// Clipboard aliases
export { default as LucideClipboard } from '../icons/clipboard';
// Clock1 aliases
export { default as LucideClock1 } from '../icons/clock-1';
// Clock10 aliases
export { default as LucideClock10 } from '../icons/clock-10';
// Clock11 aliases
export { default as LucideClock11 } from '../icons/clock-11';
// Clock12 aliases
export { default as LucideClock12 } from '../icons/clock-12';
// Clock2 aliases
export { default as LucideClock2 } from '../icons/clock-2';
// Clock4 aliases
export { default as LucideClock4 } from '../icons/clock-4';
// Clock3 aliases
export { default as LucideClock3 } from '../icons/clock-3';
// Clock5 aliases
export { default as LucideClock5 } from '../icons/clock-5';
// Clock7 aliases
export { default as LucideClock7 } from '../icons/clock-7';
// Clock6 aliases
export { default as LucideClock6 } from '../icons/clock-6';
// Clock8 aliases
export { default as LucideClock8 } from '../icons/clock-8';
// Clock9 aliases
export { default as LucideClock9 } from '../icons/clock-9';
// ClockArrowDown aliases
export { default as LucideClockArrowDown } from '../icons/clock-arrow-down';
// ClockAlert aliases
export { default as LucideClockAlert } from '../icons/clock-alert';
// ClockArrowUp aliases
export { default as LucideClockArrowUp } from '../icons/clock-arrow-up';
// ClockFading aliases
export { default as LucideClockFading } from '../icons/clock-fading';
// ClockPlus aliases
export { default as LucideClockPlus } from '../icons/clock-plus';
// Clock aliases
export { default as LucideClock } from '../icons/clock';
// ClosedCaption aliases
export { default as LucideClosedCaption } from '../icons/closed-caption';
// CloudAlert aliases
export { default as LucideCloudAlert } from '../icons/cloud-alert';
// CloudCheck aliases
export { default as LucideCloudCheck } from '../icons/cloud-check';
// CloudCog aliases
export { default as LucideCloudCog } from '../icons/cloud-cog';
// CloudDrizzle aliases
export { default as LucideCloudDrizzle } from '../icons/cloud-drizzle';
// CloudFog aliases
export { default as LucideCloudFog } from '../icons/cloud-fog';
// CloudHail aliases
export { default as LucideCloudHail } from '../icons/cloud-hail';
// CloudLightning aliases
export { default as LucideCloudLightning } from '../icons/cloud-lightning';
// CloudMoonRain aliases
export { default as LucideCloudMoonRain } from '../icons/cloud-moon-rain';
// CloudMoon aliases
export { default as LucideCloudMoon } from '../icons/cloud-moon';
// CloudOff aliases
export { default as LucideCloudOff } from '../icons/cloud-off';
// CloudRainWind aliases
export { default as LucideCloudRainWind } from '../icons/cloud-rain-wind';
// CloudRain aliases
export { default as LucideCloudRain } from '../icons/cloud-rain';
// CloudSnow aliases
export { default as LucideCloudSnow } from '../icons/cloud-snow';
// CloudSunRain aliases
export { default as LucideCloudSunRain } from '../icons/cloud-sun-rain';
// CloudSun aliases
export { default as LucideCloudSun } from '../icons/cloud-sun';
// Cloud aliases
export { default as LucideCloud } from '../icons/cloud';
// Cloudy aliases
export { default as LucideCloudy } from '../icons/cloudy';
// Clover aliases
export { default as LucideClover } from '../icons/clover';
// Club aliases
export { default as LucideClub } from '../icons/club';
// Code aliases
export { default as LucideCode } from '../icons/code';
// Codepen aliases
export { default as LucideCodepen } from '../icons/codepen';
// Codesandbox aliases
export { default as LucideCodesandbox } from '../icons/codesandbox';
// Coffee aliases
export { default as LucideCoffee } from '../icons/coffee';
// Cog aliases
export { default as LucideCog } from '../icons/cog';
// Coins aliases
export { default as LucideCoins } from '../icons/coins';
// Combine aliases
export { default as LucideCombine } from '../icons/combine';
// Columns4 aliases
export { default as LucideColumns4 } from '../icons/columns-4';
// Command aliases
export { default as LucideCommand } from '../icons/command';
// Compass aliases
export { default as LucideCompass } from '../icons/compass';
// Component aliases
export { default as LucideComponent } from '../icons/component';
// Computer aliases
export { default as LucideComputer } from '../icons/computer';
// ConciergeBell aliases
export { default as LucideConciergeBell } from '../icons/concierge-bell';
// Cone aliases
export { default as LucideCone } from '../icons/cone';
// Construction aliases
export { default as LucideConstruction } from '../icons/construction';
// Contact aliases
export { default as LucideContact } from '../icons/contact';
// Container aliases
export { default as LucideContainer } from '../icons/container';
// Contrast aliases
export { default as LucideContrast } from '../icons/contrast';
// Cookie aliases
export { default as LucideCookie } from '../icons/cookie';
// CookingPot aliases
export { default as LucideCookingPot } from '../icons/cooking-pot';
// CopyCheck aliases
export { default as LucideCopyCheck } from '../icons/copy-check';
// CopyMinus aliases
export { default as LucideCopyMinus } from '../icons/copy-minus';
// CopyPlus aliases
export { default as LucideCopyPlus } from '../icons/copy-plus';
// CopySlash aliases
export { default as LucideCopySlash } from '../icons/copy-slash';
// CopyX aliases
export { default as LucideCopyX } from '../icons/copy-x';
// Copy aliases
export { default as LucideCopy } from '../icons/copy';
// Copyleft aliases
export { default as LucideCopyleft } from '../icons/copyleft';
// Copyright aliases
export { default as LucideCopyright } from '../icons/copyright';
// CornerDownLeft aliases
export { default as LucideCornerDownLeft } from '../icons/corner-down-left';
// CornerDownRight aliases
export { default as LucideCornerDownRight } from '../icons/corner-down-right';
// CornerLeftDown aliases
export { default as LucideCornerLeftDown } from '../icons/corner-left-down';
// CornerLeftUp aliases
export { default as LucideCornerLeftUp } from '../icons/corner-left-up';
// CornerRightDown aliases
export { default as LucideCornerRightDown } from '../icons/corner-right-down';
// CornerRightUp aliases
export { default as LucideCornerRightUp } from '../icons/corner-right-up';
// CornerUpLeft aliases
export { default as LucideCornerUpLeft } from '../icons/corner-up-left';
// CornerUpRight aliases
export { default as LucideCornerUpRight } from '../icons/corner-up-right';
// Cpu aliases
export { default as LucideCpu } from '../icons/cpu';
// CreativeCommons aliases
export { default as LucideCreativeCommons } from '../icons/creative-commons';
// CreditCard aliases
export { default as LucideCreditCard } from '../icons/credit-card';
// Croissant aliases
export { default as LucideCroissant } from '../icons/croissant';
// Crop aliases
export { default as LucideCrop } from '../icons/crop';
// Cross aliases
export { default as LucideCross } from '../icons/cross';
// Crosshair aliases
export { default as LucideCrosshair } from '../icons/crosshair';
// Cuboid aliases
export { default as LucideCuboid } from '../icons/cuboid';
// Crown aliases
export { default as LucideCrown } from '../icons/crown';
// CupSoda aliases
export { default as LucideCupSoda } from '../icons/cup-soda';
// Currency aliases
export { default as LucideCurrency } from '../icons/currency';
// Cylinder aliases
export { default as LucideCylinder } from '../icons/cylinder';
// Dam aliases
export { default as LucideDam } from '../icons/dam';
// DatabaseBackup aliases
export { default as LucideDatabaseBackup } from '../icons/database-backup';
// DatabaseZap aliases
export { default as LucideDatabaseZap } from '../icons/database-zap';
// Database aliases
export { default as LucideDatabase } from '../icons/database';
// DecimalsArrowLeft aliases
export { default as LucideDecimalsArrowLeft } from '../icons/decimals-arrow-left';
// DecimalsArrowRight aliases
export { default as LucideDecimalsArrowRight } from '../icons/decimals-arrow-right';
// Delete aliases
export { default as LucideDelete } from '../icons/delete';
// Dessert aliases
export { default as LucideDessert } from '../icons/dessert';
// Diameter aliases
export { default as LucideDiameter } from '../icons/diameter';
// DiamondMinus aliases
export { default as LucideDiamondMinus } from '../icons/diamond-minus';
// DiamondPlus aliases
export { default as LucideDiamondPlus } from '../icons/diamond-plus';
// Diamond aliases
export { default as LucideDiamond } from '../icons/diamond';
// Dice1 aliases
export { default as LucideDice1 } from '../icons/dice-1';
// Dice2 aliases
export { default as LucideDice2 } from '../icons/dice-2';
// Dice3 aliases
export { default as LucideDice3 } from '../icons/dice-3';
// Dice4 aliases
export { default as LucideDice4 } from '../icons/dice-4';
// Dice5 aliases
export { default as LucideDice5 } from '../icons/dice-5';
// Dice6 aliases
export { default as LucideDice6 } from '../icons/dice-6';
// Dices aliases
export { default as LucideDices } from '../icons/dices';
// Diff aliases
export { default as LucideDiff } from '../icons/diff';
// Disc2 aliases
export { default as LucideDisc2 } from '../icons/disc-2';
// Disc3 aliases
export { default as LucideDisc3 } from '../icons/disc-3';
// DiscAlbum aliases
export { default as LucideDiscAlbum } from '../icons/disc-album';
// Disc aliases
export { default as LucideDisc } from '../icons/disc';
// Divide aliases
export { default as LucideDivide } from '../icons/divide';
// DnaOff aliases
export { default as LucideDnaOff } from '../icons/dna-off';
// Dna aliases
export { default as LucideDna } from '../icons/dna';
// Dock aliases
export { default as LucideDock } from '../icons/dock';
// Dog aliases
export { default as LucideDog } from '../icons/dog';
// DollarSign aliases
export { default as LucideDollarSign } from '../icons/dollar-sign';
// Donut aliases
export { default as LucideDonut } from '../icons/donut';
// DoorClosedLocked aliases
export { default as LucideDoorClosedLocked } from '../icons/door-closed-locked';
// DoorClosed aliases
export { default as LucideDoorClosed } from '../icons/door-closed';
// DoorOpen aliases
export { default as LucideDoorOpen } from '../icons/door-open';
// Dot aliases
export { default as LucideDot } from '../icons/dot';
// Download aliases
export { default as LucideDownload } from '../icons/download';
// DraftingCompass aliases
export { default as LucideDraftingCompass } from '../icons/drafting-compass';
// Drama aliases
export { default as LucideDrama } from '../icons/drama';
// Dribbble aliases
export { default as LucideDribbble } from '../icons/dribbble';
// Drill aliases
export { default as LucideDrill } from '../icons/drill';
// Drone aliases
export { default as LucideDrone } from '../icons/drone';
// DropletOff aliases
export { default as LucideDropletOff } from '../icons/droplet-off';
// Droplet aliases
export { default as LucideDroplet } from '../icons/droplet';
// Droplets aliases
export { default as LucideDroplets } from '../icons/droplets';
// Drum aliases
export { default as LucideDrum } from '../icons/drum';
// Drumstick aliases
export { default as LucideDrumstick } from '../icons/drumstick';
// Dumbbell aliases
export { default as LucideDumbbell } from '../icons/dumbbell';
// EarOff aliases
export { default as LucideEarOff } from '../icons/ear-off';
// Ear aliases
export { default as LucideEar } from '../icons/ear';
// EarthLock aliases
export { default as LucideEarthLock } from '../icons/earth-lock';
// Eclipse aliases
export { default as LucideEclipse } from '../icons/eclipse';
// EggFried aliases
export { default as LucideEggFried } from '../icons/egg-fried';
// EggOff aliases
export { default as LucideEggOff } from '../icons/egg-off';
// Egg aliases
export { default as LucideEgg } from '../icons/egg';
// EqualApproximately aliases
export { default as LucideEqualApproximately } from '../icons/equal-approximately';
// EqualNot aliases
export { default as LucideEqualNot } from '../icons/equal-not';
// Equal aliases
export { default as LucideEqual } from '../icons/equal';
// Eraser aliases
export { default as LucideEraser } from '../icons/eraser';
// EthernetPort aliases
export { default as LucideEthernetPort } from '../icons/ethernet-port';
// Euro aliases
export { default as LucideEuro } from '../icons/euro';
// EvCharger aliases
export { default as LucideEvCharger } from '../icons/ev-charger';
// Expand aliases
export { default as LucideExpand } from '../icons/expand';
// ExternalLink aliases
export { default as LucideExternalLink } from '../icons/external-link';
// EyeClosed aliases
export { default as LucideEyeClosed } from '../icons/eye-closed';
// EyeOff aliases
export { default as LucideEyeOff } from '../icons/eye-off';
// Eye aliases
export { default as LucideEye } from '../icons/eye';
// Facebook aliases
export { default as LucideFacebook } from '../icons/facebook';
// Factory aliases
export { default as LucideFactory } from '../icons/factory';
// Fan aliases
export { default as LucideFan } from '../icons/fan';
// FastForward aliases
export { default as LucideFastForward } from '../icons/fast-forward';
// Feather aliases
export { default as LucideFeather } from '../icons/feather';
// Fence aliases
export { default as LucideFence } from '../icons/fence';
// FerrisWheel aliases
export { default as LucideFerrisWheel } from '../icons/ferris-wheel';
// Figma aliases
export { default as LucideFigma } from '../icons/figma';
// FileArchive aliases
export { default as LucideFileArchive } from '../icons/file-archive';
// FileAudio2 aliases
export { default as LucideFileAudio2 } from '../icons/file-audio-2';
// FileAudio aliases
export { default as LucideFileAudio } from '../icons/file-audio';
// FileBadge2 aliases
export { default as LucideFileBadge2 } from '../icons/file-badge-2';
// FileBadge aliases
export { default as LucideFileBadge } from '../icons/file-badge';
// FileBox aliases
export { default as LucideFileBox } from '../icons/file-box';
// FileCheck2 aliases
export { default as LucideFileCheck2 } from '../icons/file-check-2';
// FileCheck aliases
export { default as LucideFileCheck } from '../icons/file-check';
// FileClock aliases
export { default as LucideFileClock } from '../icons/file-clock';
// FileCode2 aliases
export { default as LucideFileCode2 } from '../icons/file-code-2';
// FileCode aliases
export { default as LucideFileCode } from '../icons/file-code';
// FileDown aliases
export { default as LucideFileDown } from '../icons/file-down';
// FileDiff aliases
export { default as LucideFileDiff } from '../icons/file-diff';
// FileDigit aliases
export { default as LucideFileDigit } from '../icons/file-digit';
// FileHeart aliases
export { default as LucideFileHeart } from '../icons/file-heart';
// FileImage aliases
export { default as LucideFileImage } from '../icons/file-image';
// FileInput aliases
export { default as LucideFileInput } from '../icons/file-input';
// FileJson2 aliases
export { default as LucideFileJson2 } from '../icons/file-json-2';
// FileJson aliases
export { default as LucideFileJson } from '../icons/file-json';
// FileKey2 aliases
export { default as LucideFileKey2 } from '../icons/file-key-2';
// FileKey aliases
export { default as LucideFileKey } from '../icons/file-key';
// FileLock2 aliases
export { default as LucideFileLock2 } from '../icons/file-lock-2';
// FileLock aliases
export { default as LucideFileLock } from '../icons/file-lock';
// FileMinus2 aliases
export { default as LucideFileMinus2 } from '../icons/file-minus-2';
// FileMinus aliases
export { default as LucideFileMinus } from '../icons/file-minus';
// FileMusic aliases
export { default as LucideFileMusic } from '../icons/file-music';
// FileOutput aliases
export { default as LucideFileOutput } from '../icons/file-output';
// FilePlus2 aliases
export { default as LucideFilePlus2 } from '../icons/file-plus-2';
// FilePlus aliases
export { default as LucideFilePlus } from '../icons/file-plus';
// FileScan aliases
export { default as LucideFileScan } from '../icons/file-scan';
// FileSearch2 aliases
export { default as LucideFileSearch2 } from '../icons/file-search-2';
// FileSearch aliases
export { default as LucideFileSearch } from '../icons/file-search';
// FileSliders aliases
export { default as LucideFileSliders } from '../icons/file-sliders';
// FileSpreadsheet aliases
export { default as LucideFileSpreadsheet } from '../icons/file-spreadsheet';
// FileStack aliases
export { default as LucideFileStack } from '../icons/file-stack';
// FileSymlink aliases
export { default as LucideFileSymlink } from '../icons/file-symlink';
// FileTerminal aliases
export { default as LucideFileTerminal } from '../icons/file-terminal';
// FileText aliases
export { default as LucideFileText } from '../icons/file-text';
// FileType aliases
export { default as LucideFileType } from '../icons/file-type';
// FileType2 aliases
export { default as LucideFileType2 } from '../icons/file-type-2';
// FileUp aliases
export { default as LucideFileUp } from '../icons/file-up';
// FileUser aliases
export { default as LucideFileUser } from '../icons/file-user';
// FileVolume2 aliases
export { default as LucideFileVolume2 } from '../icons/file-volume-2';
// FileVolume aliases
export { default as LucideFileVolume } from '../icons/file-volume';
// FileWarning aliases
export { default as LucideFileWarning } from '../icons/file-warning';
// FileX2 aliases
export { default as LucideFileX2 } from '../icons/file-x-2';
// FileX aliases
export { default as LucideFileX } from '../icons/file-x';
// Files aliases
export { default as LucideFiles } from '../icons/files';
// Film aliases
export { default as LucideFilm } from '../icons/film';
// File aliases
export { default as LucideFile } from '../icons/file';
// Fingerprint aliases
export { default as LucideFingerprint } from '../icons/fingerprint';
// FireExtinguisher aliases
export { default as LucideFireExtinguisher } from '../icons/fire-extinguisher';
// FishOff aliases
export { default as LucideFishOff } from '../icons/fish-off';
// FishSymbol aliases
export { default as LucideFishSymbol } from '../icons/fish-symbol';
// Fish aliases
export { default as LucideFish } from '../icons/fish';
// FlagOff aliases
export { default as LucideFlagOff } from '../icons/flag-off';
// FlagTriangleLeft aliases
export { default as LucideFlagTriangleLeft } from '../icons/flag-triangle-left';
// FlagTriangleRight aliases
export { default as LucideFlagTriangleRight } from '../icons/flag-triangle-right';
// Flag aliases
export { default as LucideFlag } from '../icons/flag';
// FlameKindling aliases
export { default as LucideFlameKindling } from '../icons/flame-kindling';
// Flame aliases
export { default as LucideFlame } from '../icons/flame';
// FlashlightOff aliases
export { default as LucideFlashlightOff } from '../icons/flashlight-off';
// Flashlight aliases
export { default as LucideFlashlight } from '../icons/flashlight';
// FlaskConicalOff aliases
export { default as LucideFlaskConicalOff } from '../icons/flask-conical-off';
// FlaskConical aliases
export { default as LucideFlaskConical } from '../icons/flask-conical';
// FlaskRound aliases
export { default as LucideFlaskRound } from '../icons/flask-round';
// FlipHorizontal2 aliases
export { default as LucideFlipHorizontal2 } from '../icons/flip-horizontal-2';
// FlipHorizontal aliases
export { default as LucideFlipHorizontal } from '../icons/flip-horizontal';
// FlipVertical2 aliases
export { default as LucideFlipVertical2 } from '../icons/flip-vertical-2';
// FlipVertical aliases
export { default as LucideFlipVertical } from '../icons/flip-vertical';
// Flower2 aliases
export { default as LucideFlower2 } from '../icons/flower-2';
// Flower aliases
export { default as LucideFlower } from '../icons/flower';
// Focus aliases
export { default as LucideFocus } from '../icons/focus';
// FoldHorizontal aliases
export { default as LucideFoldHorizontal } from '../icons/fold-horizontal';
// FoldVertical aliases
export { default as LucideFoldVertical } from '../icons/fold-vertical';
// FolderArchive aliases
export { default as LucideFolderArchive } from '../icons/folder-archive';
// FolderCheck aliases
export { default as LucideFolderCheck } from '../icons/folder-check';
// FolderClock aliases
export { default as LucideFolderClock } from '../icons/folder-clock';
// FolderClosed aliases
export { default as LucideFolderClosed } from '../icons/folder-closed';
// FolderCode aliases
export { default as LucideFolderCode } from '../icons/folder-code';
// FolderDot aliases
export { default as LucideFolderDot } from '../icons/folder-dot';
// FolderDown aliases
export { default as LucideFolderDown } from '../icons/folder-down';
// FolderGit2 aliases
export { default as LucideFolderGit2 } from '../icons/folder-git-2';
// FolderGit aliases
export { default as LucideFolderGit } from '../icons/folder-git';
// FolderHeart aliases
export { default as LucideFolderHeart } from '../icons/folder-heart';
// FolderInput aliases
export { default as LucideFolderInput } from '../icons/folder-input';
// FolderKanban aliases
export { default as LucideFolderKanban } from '../icons/folder-kanban';
// FolderKey aliases
export { default as LucideFolderKey } from '../icons/folder-key';
// FolderLock aliases
export { default as LucideFolderLock } from '../icons/folder-lock';
// FolderMinus aliases
export { default as LucideFolderMinus } from '../icons/folder-minus';
// FolderOpenDot aliases
export { default as LucideFolderOpenDot } from '../icons/folder-open-dot';
// FolderOpen aliases
export { default as LucideFolderOpen } from '../icons/folder-open';
// FolderOutput aliases
export { default as LucideFolderOutput } from '../icons/folder-output';
// FolderPlus aliases
export { default as LucideFolderPlus } from '../icons/folder-plus';
// FolderRoot aliases
export { default as LucideFolderRoot } from '../icons/folder-root';
// FolderSearch2 aliases
export { default as LucideFolderSearch2 } from '../icons/folder-search-2';
// FolderSearch aliases
export { default as LucideFolderSearch } from '../icons/folder-search';
// FolderSymlink aliases
export { default as LucideFolderSymlink } from '../icons/folder-symlink';
// FolderSync aliases
export { default as LucideFolderSync } from '../icons/folder-sync';
// FolderTree aliases
export { default as LucideFolderTree } from '../icons/folder-tree';
// FolderUp aliases
export { default as LucideFolderUp } from '../icons/folder-up';
// FolderX aliases
export { default as LucideFolderX } from '../icons/folder-x';
// Folder aliases
export { default as LucideFolder } from '../icons/folder';
// Folders aliases
export { default as LucideFolders } from '../icons/folders';
// Footprints aliases
export { default as LucideFootprints } from '../icons/footprints';
// Forklift aliases
export { default as LucideForklift } from '../icons/forklift';
// Forward aliases
export { default as LucideForward } from '../icons/forward';
// Frame aliases
export { default as LucideFrame } from '../icons/frame';
// Framer aliases
export { default as LucideFramer } from '../icons/framer';
// Frown aliases
export { default as LucideFrown } from '../icons/frown';
// Fuel aliases
export { default as LucideFuel } from '../icons/fuel';
// Fullscreen aliases
export { default as LucideFullscreen } from '../icons/fullscreen';
// FunnelPlus aliases
export { default as LucideFunnelPlus } from '../icons/funnel-plus';
// GalleryHorizontal aliases
export { default as LucideGalleryHorizontal } from '../icons/gallery-horizontal';
// GalleryHorizontalEnd aliases
export { default as LucideGalleryHorizontalEnd } from '../icons/gallery-horizontal-end';
// GalleryThumbnails aliases
export { default as LucideGalleryThumbnails } from '../icons/gallery-thumbnails';
// GalleryVerticalEnd aliases
export { default as LucideGalleryVerticalEnd } from '../icons/gallery-vertical-end';
// GalleryVertical aliases
export { default as LucideGalleryVertical } from '../icons/gallery-vertical';
// Gamepad2 aliases
export { default as LucideGamepad2 } from '../icons/gamepad-2';
// Gamepad aliases
export { default as LucideGamepad } from '../icons/gamepad';
// Gauge aliases
export { default as LucideGauge } from '../icons/gauge';
// Gavel aliases
export { default as LucideGavel } from '../icons/gavel';
// Gem aliases
export { default as LucideGem } from '../icons/gem';
// GeorgianLari aliases
export { default as LucideGeorgianLari } from '../icons/georgian-lari';
// Ghost aliases
export { default as LucideGhost } from '../icons/ghost';
// Gift aliases
export { default as LucideGift } from '../icons/gift';
// GitBranchPlus aliases
export { default as LucideGitBranchPlus } from '../icons/git-branch-plus';
// GitBranch aliases
export { default as LucideGitBranch } from '../icons/git-branch';
// GitCommitVertical aliases
export { default as LucideGitCommitVertical } from '../icons/git-commit-vertical';
// GitCompareArrows aliases
export { default as LucideGitCompareArrows } from '../icons/git-compare-arrows';
// GitCompare aliases
export { default as LucideGitCompare } from '../icons/git-compare';
// GitFork aliases
export { default as LucideGitFork } from '../icons/git-fork';
// GitGraph aliases
export { default as LucideGitGraph } from '../icons/git-graph';
// GitMerge aliases
export { default as LucideGitMerge } from '../icons/git-merge';
// GitPullRequestArrow aliases
export { default as LucideGitPullRequestArrow } from '../icons/git-pull-request-arrow';
// GitPullRequestClosed aliases
export { default as LucideGitPullRequestClosed } from '../icons/git-pull-request-closed';
// GitPullRequestCreateArrow aliases
export { default as LucideGitPullRequestCreateArrow } from '../icons/git-pull-request-create-arrow';
// GitPullRequestCreate aliases
export { default as LucideGitPullRequestCreate } from '../icons/git-pull-request-create';
// GitPullRequestDraft aliases
export { default as LucideGitPullRequestDraft } from '../icons/git-pull-request-draft';
// Github aliases
export { default as LucideGithub } from '../icons/github';
// GitPullRequest aliases
export { default as LucideGitPullRequest } from '../icons/git-pull-request';
// Gitlab aliases
export { default as LucideGitlab } from '../icons/gitlab';
// GlassWater aliases
export { default as LucideGlassWater } from '../icons/glass-water';
// Glasses aliases
export { default as LucideGlasses } from '../icons/glasses';
// GlobeLock aliases
export { default as LucideGlobeLock } from '../icons/globe-lock';
// Globe aliases
export { default as LucideGlobe } from '../icons/globe';
// Goal aliases
export { default as LucideGoal } from '../icons/goal';
// Gpu aliases
export { default as LucideGpu } from '../icons/gpu';
// GraduationCap aliases
export { default as LucideGraduationCap } from '../icons/graduation-cap';
// Grape aliases
export { default as LucideGrape } from '../icons/grape';
// Grid3x2 aliases
export { default as LucideGrid3x2 } from '../icons/grid-3x2';
// GripHorizontal aliases
export { default as LucideGripHorizontal } from '../icons/grip-horizontal';
// GripVertical aliases
export { default as LucideGripVertical } from '../icons/grip-vertical';
// Grip aliases
export { default as LucideGrip } from '../icons/grip';
// Guitar aliases
export { default as LucideGuitar } from '../icons/guitar';
// Ham aliases
export { default as LucideHam } from '../icons/ham';
// Group aliases
export { default as LucideGroup } from '../icons/group';
// Hamburger aliases
export { default as LucideHamburger } from '../icons/hamburger';
// Hammer aliases
export { default as LucideHammer } from '../icons/hammer';
// HandCoins aliases
export { default as LucideHandCoins } from '../icons/hand-coins';
// HandFist aliases
export { default as LucideHandFist } from '../icons/hand-fist';
// HandHeart aliases
export { default as LucideHandHeart } from '../icons/hand-heart';
// HandPlatter aliases
export { default as LucideHandPlatter } from '../icons/hand-platter';
// HandMetal aliases
export { default as LucideHandMetal } from '../icons/hand-metal';
// Hand aliases
export { default as LucideHand } from '../icons/hand';
// Handbag aliases
export { default as LucideHandbag } from '../icons/handbag';
// Handshake aliases
export { default as LucideHandshake } from '../icons/handshake';
// HardDriveDownload aliases
export { default as LucideHardDriveDownload } from '../icons/hard-drive-download';
// HardDriveUpload aliases
export { default as LucideHardDriveUpload } from '../icons/hard-drive-upload';
// HardDrive aliases
export { default as LucideHardDrive } from '../icons/hard-drive';
// HardHat aliases
export { default as LucideHardHat } from '../icons/hard-hat';
// Hash aliases
export { default as LucideHash } from '../icons/hash';
// HatGlasses aliases
export { default as LucideHatGlasses } from '../icons/hat-glasses';
// Haze aliases
export { default as LucideHaze } from '../icons/haze';
// HdmiPort aliases
export { default as LucideHdmiPort } from '../icons/hdmi-port';
// Heading1 aliases
export { default as LucideHeading1 } from '../icons/heading-1';
// Heading2 aliases
export { default as LucideHeading2 } from '../icons/heading-2';
// Heading3 aliases
export { default as LucideHeading3 } from '../icons/heading-3';
// Heading4 aliases
export { default as LucideHeading4 } from '../icons/heading-4';
// Heading5 aliases
export { default as LucideHeading5 } from '../icons/heading-5';
// Heading6 aliases
export { default as LucideHeading6 } from '../icons/heading-6';
// Heading aliases
export { default as LucideHeading } from '../icons/heading';
// HeadphoneOff aliases
export { default as LucideHeadphoneOff } from '../icons/headphone-off';
// Headphones aliases
export { default as LucideHeadphones } from '../icons/headphones';
// Headset aliases
export { default as LucideHeadset } from '../icons/headset';
// HeartCrack aliases
export { default as LucideHeartCrack } from '../icons/heart-crack';
// HeartHandshake aliases
export { default as LucideHeartHandshake } from '../icons/heart-handshake';
// HeartMinus aliases
export { default as LucideHeartMinus } from '../icons/heart-minus';
// HeartOff aliases
export { default as LucideHeartOff } from '../icons/heart-off';
// HeartPlus aliases
export { default as LucideHeartPlus } from '../icons/heart-plus';
// HeartPulse aliases
export { default as LucideHeartPulse } from '../icons/heart-pulse';
// Heart aliases
export { default as LucideHeart } from '../icons/heart';
// Heater aliases
export { default as LucideHeater } from '../icons/heater';
// Hexagon aliases
export { default as LucideHexagon } from '../icons/hexagon';
// Highlighter aliases
export { default as LucideHighlighter } from '../icons/highlighter';
// History aliases
export { default as LucideHistory } from '../icons/history';
// HopOff aliases
export { default as LucideHopOff } from '../icons/hop-off';
// Hop aliases
export { default as LucideHop } from '../icons/hop';
// Hospital aliases
export { default as LucideHospital } from '../icons/hospital';
// Hotel aliases
export { default as LucideHotel } from '../icons/hotel';
// Hourglass aliases
export { default as LucideHourglass } from '../icons/hourglass';
// HouseHeart aliases
export { default as LucideHouseHeart } from '../icons/house-heart';
// HousePlug aliases
export { default as LucideHousePlug } from '../icons/house-plug';
// HousePlus aliases
export { default as LucideHousePlus } from '../icons/house-plus';
// HouseWifi aliases
export { default as LucideHouseWifi } from '../icons/house-wifi';
// IdCardLanyard aliases
export { default as LucideIdCardLanyard } from '../icons/id-card-lanyard';
// IdCard aliases
export { default as LucideIdCard } from '../icons/id-card';
// ImageDown aliases
export { default as LucideImageDown } from '../icons/image-down';
// ImageOff aliases
export { default as LucideImageOff } from '../icons/image-off';
// ImageMinus aliases
export { default as LucideImageMinus } from '../icons/image-minus';
// ImagePlay aliases
export { default as LucideImagePlay } from '../icons/image-play';
// ImagePlus aliases
export { default as LucideImagePlus } from '../icons/image-plus';
// ImageUp aliases
export { default as LucideImageUp } from '../icons/image-up';
// ImageUpscale aliases
export { default as LucideImageUpscale } from '../icons/image-upscale';
// Image aliases
export { default as LucideImage } from '../icons/image';
// Images aliases
export { default as LucideImages } from '../icons/images';
// Import aliases
export { default as LucideImport } from '../icons/import';
// Inbox aliases
export { default as LucideInbox } from '../icons/inbox';
// IndianRupee aliases
export { default as LucideIndianRupee } from '../icons/indian-rupee';
// Infinity aliases
export { default as LucideInfinity } from '../icons/infinity';
// Info aliases
export { default as LucideInfo } from '../icons/info';
// Instagram aliases
export { default as LucideInstagram } from '../icons/instagram';
// InspectionPanel aliases
export { default as LucideInspectionPanel } from '../icons/inspection-panel';
// Italic aliases
export { default as LucideItalic } from '../icons/italic';
// IterationCw aliases
export { default as LucideIterationCw } from '../icons/iteration-cw';
// IterationCcw aliases
export { default as LucideIterationCcw } from '../icons/iteration-ccw';
// Joystick aliases
export { default as LucideJoystick } from '../icons/joystick';
// Kanban aliases
export { default as LucideKanban } from '../icons/kanban';
// JapaneseYen aliases
export { default as LucideJapaneseYen } from '../icons/japanese-yen';
// KeyRound aliases
export { default as LucideKeyRound } from '../icons/key-round';
// Kayak aliases
export { default as LucideKayak } from '../icons/kayak';
// KeySquare aliases
export { default as LucideKeySquare } from '../icons/key-square';
// Key aliases
export { default as LucideKey } from '../icons/key';
// KeyboardMusic aliases
export { default as LucideKeyboardMusic } from '../icons/keyboard-music';
// KeyboardOff aliases
export { default as LucideKeyboardOff } from '../icons/keyboard-off';
// LampCeiling aliases
export { default as LucideLampCeiling } from '../icons/lamp-ceiling';
// Keyboard aliases
export { default as LucideKeyboard } from '../icons/keyboard';
// LampDesk aliases
export { default as LucideLampDesk } from '../icons/lamp-desk';
// LampFloor aliases
export { default as LucideLampFloor } from '../icons/lamp-floor';
// LampWallDown aliases
export { default as LucideLampWallDown } from '../icons/lamp-wall-down';
// LampWallUp aliases
export { default as LucideLampWallUp } from '../icons/lamp-wall-up';
// Lamp aliases
export { default as LucideLamp } from '../icons/lamp';
// LandPlot aliases
export { default as LucideLandPlot } from '../icons/land-plot';
// Landmark aliases
export { default as LucideLandmark } from '../icons/landmark';
// Languages aliases
export { default as LucideLanguages } from '../icons/languages';
// LaptopMinimalCheck aliases
export { default as LucideLaptopMinimalCheck } from '../icons/laptop-minimal-check';
// Laptop aliases
export { default as LucideLaptop } from '../icons/laptop';
// LassoSelect aliases
export { default as LucideLassoSelect } from '../icons/lasso-select';
// Lasso aliases
export { default as LucideLasso } from '../icons/lasso';
// Laugh aliases
export { default as LucideLaugh } from '../icons/laugh';
// Layers2 aliases
export { default as LucideLayers2 } from '../icons/layers-2';
// LayoutDashboard aliases
export { default as LucideLayoutDashboard } from '../icons/layout-dashboard';
// LayoutGrid aliases
export { default as LucideLayoutGrid } from '../icons/layout-grid';
// LayoutPanelLeft aliases
export { default as LucideLayoutPanelLeft } from '../icons/layout-panel-left';
// LayoutList aliases
export { default as LucideLayoutList } from '../icons/layout-list';
// LayoutPanelTop aliases
export { default as LucideLayoutPanelTop } from '../icons/layout-panel-top';
// LayoutTemplate aliases
export { default as LucideLayoutTemplate } from '../icons/layout-template';
// Leaf aliases
export { default as LucideLeaf } from '../icons/leaf';
// LeafyGreen aliases
export { default as LucideLeafyGreen } from '../icons/leafy-green';
// Lectern aliases
export { default as LucideLectern } from '../icons/lectern';
// LibraryBig aliases
export { default as LucideLibraryBig } from '../icons/library-big';
// Library aliases
export { default as LucideLibrary } from '../icons/library';
// LifeBuoy aliases
export { default as LucideLifeBuoy } from '../icons/life-buoy';
// Ligature aliases
export { default as LucideLigature } from '../icons/ligature';
// LightbulbOff aliases
export { default as LucideLightbulbOff } from '../icons/lightbulb-off';
// Lightbulb aliases
export { default as LucideLightbulb } from '../icons/lightbulb';
// LineSquiggle aliases
export { default as LucideLineSquiggle } from '../icons/line-squiggle';
// Link2Off aliases
export { default as LucideLink2Off } from '../icons/link-2-off';
// Link2 aliases
export { default as LucideLink2 } from '../icons/link-2';
// Link aliases
export { default as LucideLink } from '../icons/link';
// Linkedin aliases
export { default as LucideLinkedin } from '../icons/linkedin';
// ListCheck aliases
export { default as LucideListCheck } from '../icons/list-check';
// ListChecks aliases
export { default as LucideListChecks } from '../icons/list-checks';
// ListChevronsDownUp aliases
export { default as LucideListChevronsDownUp } from '../icons/list-chevrons-down-up';
// ListChevronsUpDown aliases
export { default as LucideListChevronsUpDown } from '../icons/list-chevrons-up-down';
// ListCollapse aliases
export { default as LucideListCollapse } from '../icons/list-collapse';
// ListEnd aliases
export { default as LucideListEnd } from '../icons/list-end';
// ListFilterPlus aliases
export { default as LucideListFilterPlus } from '../icons/list-filter-plus';
// ListFilter aliases
export { default as LucideListFilter } from '../icons/list-filter';
// ListMinus aliases
export { default as LucideListMinus } from '../icons/list-minus';
// ListMusic aliases
export { default as LucideListMusic } from '../icons/list-music';
// ListOrdered aliases
export { default as LucideListOrdered } from '../icons/list-ordered';
// ListPlus aliases
export { default as LucideListPlus } from '../icons/list-plus';
// ListRestart aliases
export { default as LucideListRestart } from '../icons/list-restart';
// ListStart aliases
export { default as LucideListStart } from '../icons/list-start';
// ListTodo aliases
export { default as LucideListTodo } from '../icons/list-todo';
// ListTree aliases
export { default as LucideListTree } from '../icons/list-tree';
// ListVideo aliases
export { default as LucideListVideo } from '../icons/list-video';
// ListX aliases
export { default as LucideListX } from '../icons/list-x';
// LoaderPinwheel aliases
export { default as LucideLoaderPinwheel } from '../icons/loader-pinwheel';
// List aliases
export { default as LucideList } from '../icons/list';
// Loader aliases
export { default as LucideLoader } from '../icons/loader';
// LocateFixed aliases
export { default as LucideLocateFixed } from '../icons/locate-fixed';
// LocateOff aliases
export { default as LucideLocateOff } from '../icons/locate-off';
// Locate aliases
export { default as LucideLocate } from '../icons/locate';
// LockKeyhole aliases
export { default as LucideLockKeyhole } from '../icons/lock-keyhole';
// Lock aliases
export { default as LucideLock } from '../icons/lock';
// LogIn aliases
export { default as LucideLogIn } from '../icons/log-in';
// Logs aliases
export { default as LucideLogs } from '../icons/logs';
// LogOut aliases
export { default as LucideLogOut } from '../icons/log-out';
// Lollipop aliases
export { default as LucideLollipop } from '../icons/lollipop';
// Luggage aliases
export { default as LucideLuggage } from '../icons/luggage';
// Magnet aliases
export { default as LucideMagnet } from '../icons/magnet';
// MailCheck aliases
export { default as LucideMailCheck } from '../icons/mail-check';
// MailMinus aliases
export { default as LucideMailMinus } from '../icons/mail-minus';
// MailOpen aliases
export { default as LucideMailOpen } from '../icons/mail-open';
// MailPlus aliases
export { default as LucideMailPlus } from '../icons/mail-plus';
// MailSearch aliases
export { default as LucideMailSearch } from '../icons/mail-search';
// MailWarning aliases
export { default as LucideMailWarning } from '../icons/mail-warning';
// MailX aliases
export { default as LucideMailX } from '../icons/mail-x';
// Mail aliases
export { default as LucideMail } from '../icons/mail';
// Mailbox aliases
export { default as LucideMailbox } from '../icons/mailbox';
// Mails aliases
export { default as LucideMails } from '../icons/mails';
// MapMinus aliases
export { default as LucideMapMinus } from '../icons/map-minus';
// MapPinCheck aliases
export { default as LucideMapPinCheck } from '../icons/map-pin-check';
// MapPinCheckInside aliases
export { default as LucideMapPinCheckInside } from '../icons/map-pin-check-inside';
// MapPinHouse aliases
export { default as LucideMapPinHouse } from '../icons/map-pin-house';
// MapPinMinusInside aliases
export { default as LucideMapPinMinusInside } from '../icons/map-pin-minus-inside';
// MapPinMinus aliases
export { default as LucideMapPinMinus } from '../icons/map-pin-minus';
// MapPinOff aliases
export { default as LucideMapPinOff } from '../icons/map-pin-off';
// MapPinPlusInside aliases
export { default as LucideMapPinPlusInside } from '../icons/map-pin-plus-inside';
// MapPinPlus aliases
export { default as LucideMapPinPlus } from '../icons/map-pin-plus';
// MapPinXInside aliases
export { default as LucideMapPinXInside } from '../icons/map-pin-x-inside';
// MapPinX aliases
export { default as LucideMapPinX } from '../icons/map-pin-x';
// MapPin aliases
export { default as LucideMapPin } from '../icons/map-pin';
// MapPinned aliases
export { default as LucideMapPinned } from '../icons/map-pinned';
// MapPlus aliases
export { default as LucideMapPlus } from '../icons/map-plus';
// Map aliases
export { default as LucideMap } from '../icons/map';
// MarsStroke aliases
export { default as LucideMarsStroke } from '../icons/mars-stroke';
// Mars aliases
export { default as LucideMars } from '../icons/mars';
// Martini aliases
export { default as LucideMartini } from '../icons/martini';
// Maximize2 aliases
export { default as LucideMaximize2 } from '../icons/maximize-2';
// Maximize aliases
export { default as LucideMaximize } from '../icons/maximize';
// Medal aliases
export { default as LucideMedal } from '../icons/medal';
// MegaphoneOff aliases
export { default as LucideMegaphoneOff } from '../icons/megaphone-off';
// Megaphone aliases
export { default as LucideMegaphone } from '../icons/megaphone';
// Meh aliases
export { default as LucideMeh } from '../icons/meh';
// MemoryStick aliases
export { default as LucideMemoryStick } from '../icons/memory-stick';
// Menu aliases
export { default as LucideMenu } from '../icons/menu';
// Merge aliases
export { default as LucideMerge } from '../icons/merge';
// MessageCircleCode aliases
export { default as LucideMessageCircleCode } from '../icons/message-circle-code';
// MessageCircleDashed aliases
export { default as LucideMessageCircleDashed } from '../icons/message-circle-dashed';
// MessageCircleHeart aliases
export { default as LucideMessageCircleHeart } from '../icons/message-circle-heart';
// MessageCircleMore aliases
export { default as LucideMessageCircleMore } from '../icons/message-circle-more';
// MessageCircleOff aliases
export { default as LucideMessageCircleOff } from '../icons/message-circle-off';
// MessageCirclePlus aliases
export { default as LucideMessageCirclePlus } from '../icons/message-circle-plus';
// MessageCircleReply aliases
export { default as LucideMessageCircleReply } from '../icons/message-circle-reply';
// MessageCircleWarning aliases
export { default as LucideMessageCircleWarning } from '../icons/message-circle-warning';
// MessageCircleX aliases
export { default as LucideMessageCircleX } from '../icons/message-circle-x';
// MessageCircle aliases
export { default as LucideMessageCircle } from '../icons/message-circle';
// MessageSquareCode aliases
export { default as LucideMessageSquareCode } from '../icons/message-square-code';
// MessageSquareDashed aliases
export { default as LucideMessageSquareDashed } from '../icons/message-square-dashed';
// MessageSquareDiff aliases
export { default as LucideMessageSquareDiff } from '../icons/message-square-diff';
// MessageSquareDot aliases
export { default as LucideMessageSquareDot } from '../icons/message-square-dot';
// MessageSquareHeart aliases
export { default as LucideMessageSquareHeart } from '../icons/message-square-heart';
// MessageSquareLock aliases
export { default as LucideMessageSquareLock } from '../icons/message-square-lock';
// MessageSquareMore aliases
export { default as LucideMessageSquareMore } from '../icons/message-square-more';
// MessageSquareOff aliases
export { default as LucideMessageSquareOff } from '../icons/message-square-off';
// MessageSquarePlus aliases
export { default as LucideMessageSquarePlus } from '../icons/message-square-plus';
// MessageSquareQuote aliases
export { default as LucideMessageSquareQuote } from '../icons/message-square-quote';
// MessageSquareReply aliases
export { default as LucideMessageSquareReply } from '../icons/message-square-reply';
// MessageSquareShare aliases
export { default as LucideMessageSquareShare } from '../icons/message-square-share';
// MessageSquareText aliases
export { default as LucideMessageSquareText } from '../icons/message-square-text';
// MessageSquareWarning aliases
export { default as LucideMessageSquareWarning } from '../icons/message-square-warning';
// MessageSquareX aliases
export { default as LucideMessageSquareX } from '../icons/message-square-x';
// MessageSquare aliases
export { default as LucideMessageSquare } from '../icons/message-square';
// MessagesSquare aliases
export { default as LucideMessagesSquare } from '../icons/messages-square';
// MicOff aliases
export { default as LucideMicOff } from '../icons/mic-off';
// Mic aliases
export { default as LucideMic } from '../icons/mic';
// Microchip aliases
export { default as LucideMicrochip } from '../icons/microchip';
// Microscope aliases
export { default as LucideMicroscope } from '../icons/microscope';
// Microwave aliases
export { default as LucideMicrowave } from '../icons/microwave';
// Milestone aliases
export { default as LucideMilestone } from '../icons/milestone';
// MilkOff aliases
export { default as LucideMilkOff } from '../icons/milk-off';
// Milk aliases
export { default as LucideMilk } from '../icons/milk';
// Minimize2 aliases
export { default as LucideMinimize2 } from '../icons/minimize-2';
// Minimize aliases
export { default as LucideMinimize } from '../icons/minimize';
// Minus aliases
export { default as LucideMinus } from '../icons/minus';
// MonitorCheck aliases
export { default as LucideMonitorCheck } from '../icons/monitor-check';
// MonitorCloud aliases
export { default as LucideMonitorCloud } from '../icons/monitor-cloud';
// MonitorCog aliases
export { default as LucideMonitorCog } from '../icons/monitor-cog';
// MonitorDot aliases
export { default as LucideMonitorDot } from '../icons/monitor-dot';
// MonitorDown aliases
export { default as LucideMonitorDown } from '../icons/monitor-down';
// MonitorOff aliases
export { default as LucideMonitorOff } from '../icons/monitor-off';
// MonitorPause aliases
export { default as LucideMonitorPause } from '../icons/monitor-pause';
// MonitorPlay aliases
export { default as LucideMonitorPlay } from '../icons/monitor-play';
// MonitorSmartphone aliases
export { default as LucideMonitorSmartphone } from '../icons/monitor-smartphone';
// MonitorSpeaker aliases
export { default as LucideMonitorSpeaker } from '../icons/monitor-speaker';
// MonitorStop aliases
export { default as LucideMonitorStop } from '../icons/monitor-stop';
// MonitorUp aliases
export { default as LucideMonitorUp } from '../icons/monitor-up';
// MonitorX aliases
export { default as LucideMonitorX } from '../icons/monitor-x';
// Monitor aliases
export { default as LucideMonitor } from '../icons/monitor';
// MoonStar aliases
export { default as LucideMoonStar } from '../icons/moon-star';
// Moon aliases
export { default as LucideMoon } from '../icons/moon';
// Motorbike aliases
export { default as LucideMotorbike } from '../icons/motorbike';
// MountainSnow aliases
export { default as LucideMountainSnow } from '../icons/mountain-snow';
// Mountain aliases
export { default as LucideMountain } from '../icons/mountain';
// MouseOff aliases
export { default as LucideMouseOff } from '../icons/mouse-off';
// MousePointer2 aliases
export { default as LucideMousePointer2 } from '../icons/mouse-pointer-2';
// MousePointerBan aliases
export { default as LucideMousePointerBan } from '../icons/mouse-pointer-ban';
// MousePointerClick aliases
export { default as LucideMousePointerClick } from '../icons/mouse-pointer-click';
// MousePointer aliases
export { default as LucideMousePointer } from '../icons/mouse-pointer';
// Mouse aliases
export { default as LucideMouse } from '../icons/mouse';
// MoveDiagonal2 aliases
export { default as LucideMoveDiagonal2 } from '../icons/move-diagonal-2';
// MoveDiagonal aliases
export { default as LucideMoveDiagonal } from '../icons/move-diagonal';
// MoveDownLeft aliases
export { default as LucideMoveDownLeft } from '../icons/move-down-left';
// MoveDownRight aliases
export { default as LucideMoveDownRight } from '../icons/move-down-right';
// MoveDown aliases
export { default as LucideMoveDown } from '../icons/move-down';
// MoveHorizontal aliases
export { default as LucideMoveHorizontal } from '../icons/move-horizontal';
// MoveLeft aliases
export { default as LucideMoveLeft } from '../icons/move-left';
// MoveRight aliases
export { default as LucideMoveRight } from '../icons/move-right';
// MoveUpLeft aliases
export { default as LucideMoveUpLeft } from '../icons/move-up-left';
// MoveUpRight aliases
export { default as LucideMoveUpRight } from '../icons/move-up-right';
// MoveUp aliases
export { default as LucideMoveUp } from '../icons/move-up';
// MoveVertical aliases
export { default as LucideMoveVertical } from '../icons/move-vertical';
// Move aliases
export { default as LucideMove } from '../icons/move';
// Music2 aliases
export { default as LucideMusic2 } from '../icons/music-2';
// Music3 aliases
export { default as LucideMusic3 } from '../icons/music-3';
// Music4 aliases
export { default as LucideMusic4 } from '../icons/music-4';
// Music aliases
export { default as LucideMusic } from '../icons/music';
// Navigation2Off aliases
export { default as LucideNavigation2Off } from '../icons/navigation-2-off';
// Navigation2 aliases
export { default as LucideNavigation2 } from '../icons/navigation-2';
// Navigation aliases
export { default as LucideNavigation } from '../icons/navigation';
// NavigationOff aliases
export { default as LucideNavigationOff } from '../icons/navigation-off';
// Network aliases
export { default as LucideNetwork } from '../icons/network';
// Newspaper aliases
export { default as LucideNewspaper } from '../icons/newspaper';
// Nfc aliases
export { default as LucideNfc } from '../icons/nfc';
// NonBinary aliases
export { default as LucideNonBinary } from '../icons/non-binary';
// NotebookPen aliases
export { default as LucideNotebookPen } from '../icons/notebook-pen';
// NotebookTabs aliases
export { default as LucideNotebookTabs } from '../icons/notebook-tabs';
// NotebookText aliases
export { default as LucideNotebookText } from '../icons/notebook-text';
// Notebook aliases
export { default as LucideNotebook } from '../icons/notebook';
// NotepadTextDashed aliases
export { default as LucideNotepadTextDashed } from '../icons/notepad-text-dashed';
// NotepadText aliases
export { default as LucideNotepadText } from '../icons/notepad-text';
// NutOff aliases
export { default as LucideNutOff } from '../icons/nut-off';
// Nut aliases
export { default as LucideNut } from '../icons/nut';
// OctagonMinus aliases
export { default as LucideOctagonMinus } from '../icons/octagon-minus';
// Octagon aliases
export { default as LucideOctagon } from '../icons/octagon';
// Omega aliases
export { default as LucideOmega } from '../icons/omega';
// Option aliases
export { default as LucideOption } from '../icons/option';
// Orbit aliases
export { default as LucideOrbit } from '../icons/orbit';
// Origami aliases
export { default as LucideOrigami } from '../icons/origami';
// Package2 aliases
export { default as LucidePackage2 } from '../icons/package-2';
// PackageCheck aliases
export { default as LucidePackageCheck } from '../icons/package-check';
// PackageMinus aliases
export { default as LucidePackageMinus } from '../icons/package-minus';
// PackageOpen aliases
export { default as LucidePackageOpen } from '../icons/package-open';
// PackagePlus aliases
export { default as LucidePackagePlus } from '../icons/package-plus';
// PackageSearch aliases
export { default as LucidePackageSearch } from '../icons/package-search';
// Package aliases
export { default as LucidePackage } from '../icons/package';
// PackageX aliases
export { default as LucidePackageX } from '../icons/package-x';
// PaintBucket aliases
export { default as LucidePaintBucket } from '../icons/paint-bucket';
// Paintbrush aliases
export { default as LucidePaintbrush } from '../icons/paintbrush';
// PaintRoller aliases
export { default as LucidePaintRoller } from '../icons/paint-roller';
// Palette aliases
export { default as LucidePalette } from '../icons/palette';
// Panda aliases
export { default as LucidePanda } from '../icons/panda';
// PanelBottomClose aliases
export { default as LucidePanelBottomClose } from '../icons/panel-bottom-close';
// PanelBottomOpen aliases
export { default as LucidePanelBottomOpen } from '../icons/panel-bottom-open';
// PanelBottom aliases
export { default as LucidePanelBottom } from '../icons/panel-bottom';
// PanelLeftRightDashed aliases
export { default as LucidePanelLeftRightDashed } from '../icons/panel-left-right-dashed';
// PanelRightClose aliases
export { default as LucidePanelRightClose } from '../icons/panel-right-close';
// PanelRightOpen aliases
export { default as LucidePanelRightOpen } from '../icons/panel-right-open';
// PanelTopBottomDashed aliases
export { default as LucidePanelTopBottomDashed } from '../icons/panel-top-bottom-dashed';
// PanelRight aliases
export { default as LucidePanelRight } from '../icons/panel-right';
// PanelTopClose aliases
export { default as LucidePanelTopClose } from '../icons/panel-top-close';
// PanelTopOpen aliases
export { default as LucidePanelTopOpen } from '../icons/panel-top-open';
// PanelTop aliases
export { default as LucidePanelTop } from '../icons/panel-top';
// PanelsLeftBottom aliases
export { default as LucidePanelsLeftBottom } from '../icons/panels-left-bottom';
// PanelsRightBottom aliases
export { default as LucidePanelsRightBottom } from '../icons/panels-right-bottom';
// Paperclip aliases
export { default as LucidePaperclip } from '../icons/paperclip';
// Parentheses aliases
export { default as LucideParentheses } from '../icons/parentheses';
// ParkingMeter aliases
export { default as LucideParkingMeter } from '../icons/parking-meter';
// PartyPopper aliases
export { default as LucidePartyPopper } from '../icons/party-popper';
// Pause aliases
export { default as LucidePause } from '../icons/pause';
// PawPrint aliases
export { default as LucidePawPrint } from '../icons/paw-print';
// PcCase aliases
export { default as LucidePcCase } from '../icons/pc-case';
// PenOff aliases
export { default as LucidePenOff } from '../icons/pen-off';
// PenTool aliases
export { default as LucidePenTool } from '../icons/pen-tool';
// PencilLine aliases
export { default as LucidePencilLine } from '../icons/pencil-line';
// PencilOff aliases
export { default as LucidePencilOff } from '../icons/pencil-off';
// PencilRuler aliases
export { default as LucidePencilRuler } from '../icons/pencil-ruler';
// Pencil aliases
export { default as LucidePencil } from '../icons/pencil';
// Pentagon aliases
export { default as LucidePentagon } from '../icons/pentagon';
// Percent aliases
export { default as LucidePercent } from '../icons/percent';
// PersonStanding aliases
export { default as LucidePersonStanding } from '../icons/person-standing';
// PhilippinePeso aliases
export { default as LucidePhilippinePeso } from '../icons/philippine-peso';
// PhoneCall aliases
export { default as LucidePhoneCall } from '../icons/phone-call';
// PhoneForwarded aliases
export { default as LucidePhoneForwarded } from '../icons/phone-forwarded';
// PhoneIncoming aliases
export { default as LucidePhoneIncoming } from '../icons/phone-incoming';
// PhoneMissed aliases
export { default as LucidePhoneMissed } from '../icons/phone-missed';
// PhoneOff aliases
export { default as LucidePhoneOff } from '../icons/phone-off';
// PhoneOutgoing aliases
export { default as LucidePhoneOutgoing } from '../icons/phone-outgoing';
// Phone aliases
export { default as LucidePhone } from '../icons/phone';
// Pi aliases
export { default as LucidePi } from '../icons/pi';
// Piano aliases
export { default as LucidePiano } from '../icons/piano';
// Pickaxe aliases
export { default as LucidePickaxe } from '../icons/pickaxe';
// PictureInPicture2 aliases
export { default as LucidePictureInPicture2 } from '../icons/picture-in-picture-2';
// PictureInPicture aliases
export { default as LucidePictureInPicture } from '../icons/picture-in-picture';
// PiggyBank aliases
export { default as LucidePiggyBank } from '../icons/piggy-bank';
// PilcrowLeft aliases
export { default as LucidePilcrowLeft } from '../icons/pilcrow-left';
// Pilcrow aliases
export { default as LucidePilcrow } from '../icons/pilcrow';
// PilcrowRight aliases
export { default as LucidePilcrowRight } from '../icons/pilcrow-right';
// PillBottle aliases
export { default as LucidePillBottle } from '../icons/pill-bottle';
// Pill aliases
export { default as LucidePill } from '../icons/pill';
// PinOff aliases
export { default as LucidePinOff } from '../icons/pin-off';
// Pin aliases
export { default as LucidePin } from '../icons/pin';
// Pizza aliases
export { default as LucidePizza } from '../icons/pizza';
// Pipette aliases
export { default as LucidePipette } from '../icons/pipette';
// PlaneLanding aliases
export { default as LucidePlaneLanding } from '../icons/plane-landing';
// PlaneTakeoff aliases
export { default as LucidePlaneTakeoff } from '../icons/plane-takeoff';
// Plane aliases
export { default as LucidePlane } from '../icons/plane';
// Play aliases
export { default as LucidePlay } from '../icons/play';
// Plug2 aliases
export { default as LucidePlug2 } from '../icons/plug-2';
// Plug aliases
export { default as LucidePlug } from '../icons/plug';
// Plus aliases
export { default as LucidePlus } from '../icons/plus';
// PocketKnife aliases
export { default as LucidePocketKnife } from '../icons/pocket-knife';
// Pocket aliases
export { default as LucidePocket } from '../icons/pocket';
// Podcast aliases
export { default as LucidePodcast } from '../icons/podcast';
// PointerOff aliases
export { default as LucidePointerOff } from '../icons/pointer-off';
// Pointer aliases
export { default as LucidePointer } from '../icons/pointer';
// Popcorn aliases
export { default as LucidePopcorn } from '../icons/popcorn';
// Popsicle aliases
export { default as LucidePopsicle } from '../icons/popsicle';
// PoundSterling aliases
export { default as LucidePoundSterling } from '../icons/pound-sterling';
// PowerOff aliases
export { default as LucidePowerOff } from '../icons/power-off';
// Power aliases
export { default as LucidePower } from '../icons/power';
// Presentation aliases
export { default as LucidePresentation } from '../icons/presentation';
// PrinterCheck aliases
export { default as LucidePrinterCheck } from '../icons/printer-check';
// Printer aliases
export { default as LucidePrinter } from '../icons/printer';
// Projector aliases
export { default as LucideProjector } from '../icons/projector';
// Proportions aliases
export { default as LucideProportions } from '../icons/proportions';
// Puzzle aliases
export { default as LucidePuzzle } from '../icons/puzzle';
// Pyramid aliases
export { default as LucidePyramid } from '../icons/pyramid';
// QrCode aliases
export { default as LucideQrCode } from '../icons/qr-code';
// Quote aliases
export { default as LucideQuote } from '../icons/quote';
// Rabbit aliases
export { default as LucideRabbit } from '../icons/rabbit';
// Radar aliases
export { default as LucideRadar } from '../icons/radar';
// Radiation aliases
export { default as LucideRadiation } from '../icons/radiation';
// Radical aliases
export { default as LucideRadical } from '../icons/radical';
// RadioReceiver aliases
export { default as LucideRadioReceiver } from '../icons/radio-receiver';
// RadioTower aliases
export { default as LucideRadioTower } from '../icons/radio-tower';
// Radio aliases
export { default as LucideRadio } from '../icons/radio';
// Radius aliases
export { default as LucideRadius } from '../icons/radius';
// RailSymbol aliases
export { default as LucideRailSymbol } from '../icons/rail-symbol';
// Rainbow aliases
export { default as LucideRainbow } from '../icons/rainbow';
// Rat aliases
export { default as LucideRat } from '../icons/rat';
// Ratio aliases
export { default as LucideRatio } from '../icons/ratio';
// ReceiptCent aliases
export { default as LucideReceiptCent } from '../icons/receipt-cent';
// ReceiptEuro aliases
export { default as LucideReceiptEuro } from '../icons/receipt-euro';
// ReceiptIndianRupee aliases
export { default as LucideReceiptIndianRupee } from '../icons/receipt-indian-rupee';
// ReceiptJapaneseYen aliases
export { default as LucideReceiptJapaneseYen } from '../icons/receipt-japanese-yen';
// ReceiptPoundSterling aliases
export { default as LucideReceiptPoundSterling } from '../icons/receipt-pound-sterling';
// ReceiptRussianRuble aliases
export { default as LucideReceiptRussianRuble } from '../icons/receipt-russian-ruble';
// ReceiptSwissFranc aliases
export { default as LucideReceiptSwissFranc } from '../icons/receipt-swiss-franc';
// ReceiptText aliases
export { default as LucideReceiptText } from '../icons/receipt-text';
// ReceiptTurkishLira aliases
export { default as LucideReceiptTurkishLira } from '../icons/receipt-turkish-lira';
// Receipt aliases
export { default as LucideReceipt } from '../icons/receipt';
// RectangleCircle aliases
export { default as LucideRectangleCircle } from '../icons/rectangle-circle';
// RectangleGoggles aliases
export { default as LucideRectangleGoggles } from '../icons/rectangle-goggles';
// RectangleHorizontal aliases
export { default as LucideRectangleHorizontal } from '../icons/rectangle-horizontal';
// RectangleVertical aliases
export { default as LucideRectangleVertical } from '../icons/rectangle-vertical';
// Recycle aliases
export { default as LucideRecycle } from '../icons/recycle';
// Redo2 aliases
export { default as LucideRedo2 } from '../icons/redo-2';
// RedoDot aliases
export { default as LucideRedoDot } from '../icons/redo-dot';
// Redo aliases
export { default as LucideRedo } from '../icons/redo';
// RefreshCcwDot aliases
export { default as LucideRefreshCcwDot } from '../icons/refresh-ccw-dot';
// RefreshCcw aliases
export { default as LucideRefreshCcw } from '../icons/refresh-ccw';
// RefreshCwOff aliases
export { default as LucideRefreshCwOff } from '../icons/refresh-cw-off';
// RefreshCw aliases
export { default as LucideRefreshCw } from '../icons/refresh-cw';
// Refrigerator aliases
export { default as LucideRefrigerator } from '../icons/refrigerator';
// Regex aliases
export { default as LucideRegex } from '../icons/regex';
// RemoveFormatting aliases
export { default as LucideRemoveFormatting } from '../icons/remove-formatting';
// Repeat1 aliases
export { default as LucideRepeat1 } from '../icons/repeat-1';
// Repeat2 aliases
export { default as LucideRepeat2 } from '../icons/repeat-2';
// Repeat aliases
export { default as LucideRepeat } from '../icons/repeat';
// ReplaceAll aliases
export { default as LucideReplaceAll } from '../icons/replace-all';
// Replace aliases
export { default as LucideReplace } from '../icons/replace';
// ReplyAll aliases
export { default as LucideReplyAll } from '../icons/reply-all';
// Reply aliases
export { default as LucideReply } from '../icons/reply';
// Rewind aliases
export { default as LucideRewind } from '../icons/rewind';
// Ribbon aliases
export { default as LucideRibbon } from '../icons/ribbon';
// Rocket aliases
export { default as LucideRocket } from '../icons/rocket';
// RockingChair aliases
export { default as LucideRockingChair } from '../icons/rocking-chair';
// RollerCoaster aliases
export { default as LucideRollerCoaster } from '../icons/roller-coaster';
// Rose aliases
export { default as LucideRose } from '../icons/rose';
// RotateCcwKey aliases
export { default as LucideRotateCcwKey } from '../icons/rotate-ccw-key';
// RotateCcwSquare aliases
export { default as LucideRotateCcwSquare } from '../icons/rotate-ccw-square';
// RotateCcw aliases
export { default as LucideRotateCcw } from '../icons/rotate-ccw';
// RotateCwSquare aliases
export { default as LucideRotateCwSquare } from '../icons/rotate-cw-square';
// RotateCw aliases
export { default as LucideRotateCw } from '../icons/rotate-cw';
// RouteOff aliases
export { default as LucideRouteOff } from '../icons/route-off';
// Route aliases
export { default as LucideRoute } from '../icons/route';
// Router aliases
export { default as LucideRouter } from '../icons/router';
// Rows4 aliases
export { default as LucideRows4 } from '../icons/rows-4';
// Rss aliases
export { default as LucideRss } from '../icons/rss';
// RulerDimensionLine aliases
export { default as LucideRulerDimensionLine } from '../icons/ruler-dimension-line';
// Ruler aliases
export { default as LucideRuler } from '../icons/ruler';
// RussianRuble aliases
export { default as LucideRussianRuble } from '../icons/russian-ruble';
// Sailboat aliases
export { default as LucideSailboat } from '../icons/sailboat';
// Salad aliases
export { default as LucideSalad } from '../icons/salad';
// Sandwich aliases
export { default as LucideSandwich } from '../icons/sandwich';
// SatelliteDish aliases
export { default as LucideSatelliteDish } from '../icons/satellite-dish';
// Satellite aliases
export { default as LucideSatellite } from '../icons/satellite';
// SaudiRiyal aliases
export { default as LucideSaudiRiyal } from '../icons/saudi-riyal';
// SaveAll aliases
export { default as LucideSaveAll } from '../icons/save-all';
// SaveOff aliases
export { default as LucideSaveOff } from '../icons/save-off';
// Save aliases
export { default as LucideSave } from '../icons/save';
// Scale aliases
export { default as LucideScale } from '../icons/scale';
// Scaling aliases
export { default as LucideScaling } from '../icons/scaling';
// ScanBarcode aliases
export { default as LucideScanBarcode } from '../icons/scan-barcode';
// ScanEye aliases
export { default as LucideScanEye } from '../icons/scan-eye';
// ScanFace aliases
export { default as LucideScanFace } from '../icons/scan-face';
// ScanHeart aliases
export { default as LucideScanHeart } from '../icons/scan-heart';
// ScanLine aliases
export { default as LucideScanLine } from '../icons/scan-line';
// ScanQrCode aliases
export { default as LucideScanQrCode } from '../icons/scan-qr-code';
// ScanSearch aliases
export { default as LucideScanSearch } from '../icons/scan-search';
// ScanText aliases
export { default as LucideScanText } from '../icons/scan-text';
// Scan aliases
export { default as LucideScan } from '../icons/scan';
// School aliases
export { default as LucideSchool } from '../icons/school';
// ScissorsLineDashed aliases
export { default as LucideScissorsLineDashed } from '../icons/scissors-line-dashed';
// Scissors aliases
export { default as LucideScissors } from '../icons/scissors';
// ScreenShareOff aliases
export { default as LucideScreenShareOff } from '../icons/screen-share-off';
// ScreenShare aliases
export { default as LucideScreenShare } from '../icons/screen-share';
// ScrollText aliases
export { default as LucideScrollText } from '../icons/scroll-text';
// Scroll aliases
export { default as LucideScroll } from '../icons/scroll';
// SearchCheck aliases
export { default as LucideSearchCheck } from '../icons/search-check';
// SearchCode aliases
export { default as LucideSearchCode } from '../icons/search-code';
// SearchSlash aliases
export { default as LucideSearchSlash } from '../icons/search-slash';
// SearchX aliases
export { default as LucideSearchX } from '../icons/search-x';
// Search aliases
export { default as LucideSearch } from '../icons/search';
// Section aliases
export { default as LucideSection } from '../icons/section';
// SendToBack aliases
export { default as LucideSendToBack } from '../icons/send-to-back';
// Send aliases
export { default as LucideSend } from '../icons/send';
// SeparatorHorizontal aliases
export { default as LucideSeparatorHorizontal } from '../icons/separator-horizontal';
// SeparatorVertical aliases
export { default as LucideSeparatorVertical } from '../icons/separator-vertical';
// ServerCog aliases
export { default as LucideServerCog } from '../icons/server-cog';
// ServerCrash aliases
export { default as LucideServerCrash } from '../icons/server-crash';
// ServerOff aliases
export { default as LucideServerOff } from '../icons/server-off';
// Server aliases
export { default as LucideServer } from '../icons/server';
// Settings2 aliases
export { default as LucideSettings2 } from '../icons/settings-2';
// Settings aliases
export { default as LucideSettings } from '../icons/settings';
// Shapes aliases
export { default as LucideShapes } from '../icons/shapes';
// Share2 aliases
export { default as LucideShare2 } from '../icons/share-2';
// Share aliases
export { default as LucideShare } from '../icons/share';
// Sheet aliases
export { default as LucideSheet } from '../icons/sheet';
// Shell aliases
export { default as LucideShell } from '../icons/shell';
// ShieldAlert aliases
export { default as LucideShieldAlert } from '../icons/shield-alert';
// ShieldBan aliases
export { default as LucideShieldBan } from '../icons/shield-ban';
// ShieldCheck aliases
export { default as LucideShieldCheck } from '../icons/shield-check';
// ShieldEllipsis aliases
export { default as LucideShieldEllipsis } from '../icons/shield-ellipsis';
// ShieldHalf aliases
export { default as LucideShieldHalf } from '../icons/shield-half';
// ShieldMinus aliases
export { default as LucideShieldMinus } from '../icons/shield-minus';
// ShieldOff aliases
export { default as LucideShieldOff } from '../icons/shield-off';
// ShieldPlus aliases
export { default as LucideShieldPlus } from '../icons/shield-plus';
// ShieldUser aliases
export { default as LucideShieldUser } from '../icons/shield-user';
// Shield aliases
export { default as LucideShield } from '../icons/shield';
// ShipWheel aliases
export { default as LucideShipWheel } from '../icons/ship-wheel';
// Ship aliases
export { default as LucideShip } from '../icons/ship';
// Shirt aliases
export { default as LucideShirt } from '../icons/shirt';
// ShoppingBag aliases
export { default as LucideShoppingBag } from '../icons/shopping-bag';
// ShoppingBasket aliases
export { default as LucideShoppingBasket } from '../icons/shopping-basket';
// ShoppingCart aliases
export { default as LucideShoppingCart } from '../icons/shopping-cart';
// Shovel aliases
export { default as LucideShovel } from '../icons/shovel';
// ShowerHead aliases
export { default as LucideShowerHead } from '../icons/shower-head';
// Shrimp aliases
export { default as LucideShrimp } from '../icons/shrimp';
// Shredder aliases
export { default as LucideShredder } from '../icons/shredder';
// Shrink aliases
export { default as LucideShrink } from '../icons/shrink';
// Shrub aliases
export { default as LucideShrub } from '../icons/shrub';
// Shuffle aliases
export { default as LucideShuffle } from '../icons/shuffle';
// Sigma aliases
export { default as LucideSigma } from '../icons/sigma';
// SignalHigh aliases
export { default as LucideSignalHigh } from '../icons/signal-high';
// SignalLow aliases
export { default as LucideSignalLow } from '../icons/signal-low';
// SignalMedium aliases
export { default as LucideSignalMedium } from '../icons/signal-medium';
// SignalZero aliases
export { default as LucideSignalZero } from '../icons/signal-zero';
// Signal aliases
export { default as LucideSignal } from '../icons/signal';
// Signature aliases
export { default as LucideSignature } from '../icons/signature';
// SignpostBig aliases
export { default as LucideSignpostBig } from '../icons/signpost-big';
// Signpost aliases
export { default as LucideSignpost } from '../icons/signpost';
// Siren aliases
export { default as LucideSiren } from '../icons/siren';
// SkipBack aliases
export { default as LucideSkipBack } from '../icons/skip-back';
// SkipForward aliases
export { default as LucideSkipForward } from '../icons/skip-forward';
// Skull aliases
export { default as LucideSkull } from '../icons/skull';
// Slack aliases
export { default as LucideSlack } from '../icons/slack';
// Slash aliases
export { default as LucideSlash } from '../icons/slash';
// Slice aliases
export { default as LucideSlice } from '../icons/slice';
// SlidersHorizontal aliases
export { default as LucideSlidersHorizontal } from '../icons/sliders-horizontal';
// SmartphoneCharging aliases
export { default as LucideSmartphoneCharging } from '../icons/smartphone-charging';
// SmartphoneNfc aliases
export { default as LucideSmartphoneNfc } from '../icons/smartphone-nfc';
// Smartphone aliases
export { default as LucideSmartphone } from '../icons/smartphone';
// SmilePlus aliases
export { default as LucideSmilePlus } from '../icons/smile-plus';
// Smile aliases
export { default as LucideSmile } from '../icons/smile';
// Snail aliases
export { default as LucideSnail } from '../icons/snail';
// Snowflake aliases
export { default as LucideSnowflake } from '../icons/snowflake';
// SoapDispenserDroplet aliases
export { default as LucideSoapDispenserDroplet } from '../icons/soap-dispenser-droplet';
// Sofa aliases
export { default as LucideSofa } from '../icons/sofa';
// Soup aliases
export { default as LucideSoup } from '../icons/soup';
// Space aliases
export { default as LucideSpace } from '../icons/space';
// Spade aliases
export { default as LucideSpade } from '../icons/spade';
// Sparkle aliases
export { default as LucideSparkle } from '../icons/sparkle';
// Speaker aliases
export { default as LucideSpeaker } from '../icons/speaker';
// Speech aliases
export { default as LucideSpeech } from '../icons/speech';
// SpellCheck2 aliases
export { default as LucideSpellCheck2 } from '../icons/spell-check-2';
// SpellCheck aliases
export { default as LucideSpellCheck } from '../icons/spell-check';
// SplinePointer aliases
export { default as LucideSplinePointer } from '../icons/spline-pointer';
// Spline aliases
export { default as LucideSpline } from '../icons/spline';
// Split aliases
export { default as LucideSplit } from '../icons/split';
// Spotlight aliases
export { default as LucideSpotlight } from '../icons/spotlight';
// Spool aliases
export { default as LucideSpool } from '../icons/spool';
// Sprout aliases
export { default as LucideSprout } from '../icons/sprout';
// SprayCan aliases
export { default as LucideSprayCan } from '../icons/spray-can';
// SquareDashedBottomCode aliases
export { default as LucideSquareDashedBottomCode } from '../icons/square-dashed-bottom-code';
// SquareDashedBottom aliases
export { default as LucideSquareDashedBottom } from '../icons/square-dashed-bottom';
// SquareDashedTopSolid aliases
export { default as LucideSquareDashedTopSolid } from '../icons/square-dashed-top-solid';
// SquarePause aliases
export { default as LucideSquarePause } from '../icons/square-pause';
// SquareRadical aliases
export { default as LucideSquareRadical } from '../icons/square-radical';
// SquareRoundCorner aliases
export { default as LucideSquareRoundCorner } from '../icons/square-round-corner';
// SquareSquare aliases
export { default as LucideSquareSquare } from '../icons/square-square';
// SquareStack aliases
export { default as LucideSquareStack } from '../icons/square-stack';
// SquareStop aliases
export { default as LucideSquareStop } from '../icons/square-stop';
// SquareStar aliases
export { default as LucideSquareStar } from '../icons/square-star';
// Square aliases
export { default as LucideSquare } from '../icons/square';
// SquaresExclude aliases
export { default as LucideSquaresExclude } from '../icons/squares-exclude';
// SquaresIntersect aliases
export { default as LucideSquaresIntersect } from '../icons/squares-intersect';
// SquaresSubtract aliases
export { default as LucideSquaresSubtract } from '../icons/squares-subtract';
// SquaresUnite aliases
export { default as LucideSquaresUnite } from '../icons/squares-unite';
// SquircleDashed aliases
export { default as LucideSquircleDashed } from '../icons/squircle-dashed';
// Squircle aliases
export { default as LucideSquircle } from '../icons/squircle';
// Squirrel aliases
export { default as LucideSquirrel } from '../icons/squirrel';
// Stamp aliases
export { default as LucideStamp } from '../icons/stamp';
// StarHalf aliases
export { default as LucideStarHalf } from '../icons/star-half';
// StarOff aliases
export { default as LucideStarOff } from '../icons/star-off';
// StepBack aliases
export { default as LucideStepBack } from '../icons/step-back';
// Star aliases
export { default as LucideStar } from '../icons/star';
// StepForward aliases
export { default as LucideStepForward } from '../icons/step-forward';
// Stethoscope aliases
export { default as LucideStethoscope } from '../icons/stethoscope';
// Sticker aliases
export { default as LucideSticker } from '../icons/sticker';
// StickyNote aliases
export { default as LucideStickyNote } from '../icons/sticky-note';
// Store aliases
export { default as LucideStore } from '../icons/store';
// StretchHorizontal aliases
export { default as LucideStretchHorizontal } from '../icons/stretch-horizontal';
// StretchVertical aliases
export { default as LucideStretchVertical } from '../icons/stretch-vertical';
// Strikethrough aliases
export { default as LucideStrikethrough } from '../icons/strikethrough';
// Subscript aliases
export { default as LucideSubscript } from '../icons/subscript';
// SunDim aliases
export { default as LucideSunDim } from '../icons/sun-dim';
// SunMedium aliases
export { default as LucideSunMedium } from '../icons/sun-medium';
// SunMoon aliases
export { default as LucideSunMoon } from '../icons/sun-moon';
// Sun aliases
export { default as LucideSun } from '../icons/sun';
// SunSnow aliases
export { default as LucideSunSnow } from '../icons/sun-snow';
// Sunrise aliases
export { default as LucideSunrise } from '../icons/sunrise';
// Sunset aliases
export { default as LucideSunset } from '../icons/sunset';
// SwatchBook aliases
export { default as LucideSwatchBook } from '../icons/swatch-book';
// Superscript aliases
export { default as LucideSuperscript } from '../icons/superscript';
// SwissFranc aliases
export { default as LucideSwissFranc } from '../icons/swiss-franc';
// SwitchCamera aliases
export { default as LucideSwitchCamera } from '../icons/switch-camera';
// Sword aliases
export { default as LucideSword } from '../icons/sword';
// Swords aliases
export { default as LucideSwords } from '../icons/swords';
// Syringe aliases
export { default as LucideSyringe } from '../icons/syringe';
// Table2 aliases
export { default as LucideTable2 } from '../icons/table-2';
// TableCellsMerge aliases
export { default as LucideTableCellsMerge } from '../icons/table-cells-merge';
// TableCellsSplit aliases
export { default as LucideTableCellsSplit } from '../icons/table-cells-split';
// TableColumnsSplit aliases
export { default as LucideTableColumnsSplit } from '../icons/table-columns-split';
// TableOfContents aliases
export { default as LucideTableOfContents } from '../icons/table-of-contents';
// TableProperties aliases
export { default as LucideTableProperties } from '../icons/table-properties';
// Table aliases
export { default as LucideTable } from '../icons/table';
// TableRowsSplit aliases
export { default as LucideTableRowsSplit } from '../icons/table-rows-split';
// TabletSmartphone aliases
export { default as LucideTabletSmartphone } from '../icons/tablet-smartphone';
// Tablet aliases
export { default as LucideTablet } from '../icons/tablet';
// Tablets aliases
export { default as LucideTablets } from '../icons/tablets';
// Tag aliases
export { default as LucideTag } from '../icons/tag';
// Tags aliases
export { default as LucideTags } from '../icons/tags';
// Tally1 aliases
export { default as LucideTally1 } from '../icons/tally-1';
// Tally2 aliases
export { default as LucideTally2 } from '../icons/tally-2';
// Tally3 aliases
export { default as LucideTally3 } from '../icons/tally-3';
// Tally4 aliases
export { default as LucideTally4 } from '../icons/tally-4';
// Tally5 aliases
export { default as LucideTally5 } from '../icons/tally-5';
// Tangent aliases
export { default as LucideTangent } from '../icons/tangent';
// Target aliases
export { default as LucideTarget } from '../icons/target';
// Telescope aliases
export { default as LucideTelescope } from '../icons/telescope';
// TentTree aliases
export { default as LucideTentTree } from '../icons/tent-tree';
// Tent aliases
export { default as LucideTent } from '../icons/tent';
// Terminal aliases
export { default as LucideTerminal } from '../icons/terminal';
// TestTube aliases
export { default as LucideTestTube } from '../icons/test-tube';
// TestTubes aliases
export { default as LucideTestTubes } from '../icons/test-tubes';
// TextCursorInput aliases
export { default as LucideTextCursorInput } from '../icons/text-cursor-input';
// TextCursor aliases
export { default as LucideTextCursor } from '../icons/text-cursor';
// TextQuote aliases
export { default as LucideTextQuote } from '../icons/text-quote';
// TextSearch aliases
export { default as LucideTextSearch } from '../icons/text-search';
// Theater aliases
export { default as LucideTheater } from '../icons/theater';
// ThermometerSnowflake aliases
export { default as LucideThermometerSnowflake } from '../icons/thermometer-snowflake';
// ThermometerSun aliases
export { default as LucideThermometerSun } from '../icons/thermometer-sun';
// Thermometer aliases
export { default as LucideThermometer } from '../icons/thermometer';
// ThumbsDown aliases
export { default as LucideThumbsDown } from '../icons/thumbs-down';
// ThumbsUp aliases
export { default as LucideThumbsUp } from '../icons/thumbs-up';
// TicketCheck aliases
export { default as LucideTicketCheck } from '../icons/ticket-check';
// TicketMinus aliases
export { default as LucideTicketMinus } from '../icons/ticket-minus';
// TicketPercent aliases
export { default as LucideTicketPercent } from '../icons/ticket-percent';
// TicketPlus aliases
export { default as LucideTicketPlus } from '../icons/ticket-plus';
// TicketSlash aliases
export { default as LucideTicketSlash } from '../icons/ticket-slash';
// TicketX aliases
export { default as LucideTicketX } from '../icons/ticket-x';
// Ticket aliases
export { default as LucideTicket } from '../icons/ticket';
// TicketsPlane aliases
export { default as LucideTicketsPlane } from '../icons/tickets-plane';
// Tickets aliases
export { default as LucideTickets } from '../icons/tickets';
// TimerOff aliases
export { default as LucideTimerOff } from '../icons/timer-off';
// TimerReset aliases
export { default as LucideTimerReset } from '../icons/timer-reset';
// ToggleLeft aliases
export { default as LucideToggleLeft } from '../icons/toggle-left';
// Timer aliases
export { default as LucideTimer } from '../icons/timer';
// ToggleRight aliases
export { default as LucideToggleRight } from '../icons/toggle-right';
// Toilet aliases
export { default as LucideToilet } from '../icons/toilet';
// ToolCase aliases
export { default as LucideToolCase } from '../icons/tool-case';
// Tornado aliases
export { default as LucideTornado } from '../icons/tornado';
// Torus aliases
export { default as LucideTorus } from '../icons/torus';
// TouchpadOff aliases
export { default as LucideTouchpadOff } from '../icons/touchpad-off';
// Touchpad aliases
export { default as LucideTouchpad } from '../icons/touchpad';
// TowerControl aliases
export { default as LucideTowerControl } from '../icons/tower-control';
// ToyBrick aliases
export { default as LucideToyBrick } from '../icons/toy-brick';
// Tractor aliases
export { default as LucideTractor } from '../icons/tractor';
// TrafficCone aliases
export { default as LucideTrafficCone } from '../icons/traffic-cone';
// TrainFrontTunnel aliases
export { default as LucideTrainFrontTunnel } from '../icons/train-front-tunnel';
// TrainFront aliases
export { default as LucideTrainFront } from '../icons/train-front';
// TrainTrack aliases
export { default as LucideTrainTrack } from '../icons/train-track';
// Transgender aliases
export { default as LucideTransgender } from '../icons/transgender';
// Trash aliases
export { default as LucideTrash } from '../icons/trash';
// Trash2 aliases
export { default as LucideTrash2 } from '../icons/trash-2';
// TreeDeciduous aliases
export { default as LucideTreeDeciduous } from '../icons/tree-deciduous';
// TreePine aliases
export { default as LucideTreePine } from '../icons/tree-pine';
// Trees aliases
export { default as LucideTrees } from '../icons/trees';
// Trello aliases
export { default as LucideTrello } from '../icons/trello';
// TrendingDown aliases
export { default as LucideTrendingDown } from '../icons/trending-down';
// TrendingUpDown aliases
export { default as LucideTrendingUpDown } from '../icons/trending-up-down';
// TrendingUp aliases
export { default as LucideTrendingUp } from '../icons/trending-up';
// TriangleDashed aliases
export { default as LucideTriangleDashed } from '../icons/triangle-dashed';
// TriangleRight aliases
export { default as LucideTriangleRight } from '../icons/triangle-right';
// Triangle aliases
export { default as LucideTriangle } from '../icons/triangle';
// Trophy aliases
export { default as LucideTrophy } from '../icons/trophy';
// TruckElectric aliases
export { default as LucideTruckElectric } from '../icons/truck-electric';
// Truck aliases
export { default as LucideTruck } from '../icons/truck';
// TurkishLira aliases
export { default as LucideTurkishLira } from '../icons/turkish-lira';
// Turntable aliases
export { default as LucideTurntable } from '../icons/turntable';
// Turtle aliases
export { default as LucideTurtle } from '../icons/turtle';
// Tv aliases
export { default as LucideTv } from '../icons/tv';
// TvMinimalPlay aliases
export { default as LucideTvMinimalPlay } from '../icons/tv-minimal-play';
// Twitch aliases
export { default as LucideTwitch } from '../icons/twitch';
// Twitter aliases
export { default as LucideTwitter } from '../icons/twitter';
// TypeOutline aliases
export { default as LucideTypeOutline } from '../icons/type-outline';
// Type aliases
export { default as LucideType } from '../icons/type';
// UmbrellaOff aliases
export { default as LucideUmbrellaOff } from '../icons/umbrella-off';
// Umbrella aliases
export { default as LucideUmbrella } from '../icons/umbrella';
// Underline aliases
export { default as LucideUnderline } from '../icons/underline';
// Undo2 aliases
export { default as LucideUndo2 } from '../icons/undo-2';
// UndoDot aliases
export { default as LucideUndoDot } from '../icons/undo-dot';
// UnfoldHorizontal aliases
export { default as LucideUnfoldHorizontal } from '../icons/unfold-horizontal';
// Undo aliases
export { default as LucideUndo } from '../icons/undo';
// UnfoldVertical aliases
export { default as LucideUnfoldVertical } from '../icons/unfold-vertical';
// Ungroup aliases
export { default as LucideUngroup } from '../icons/ungroup';
// Unlink2 aliases
export { default as LucideUnlink2 } from '../icons/unlink-2';
// Unlink aliases
export { default as LucideUnlink } from '../icons/unlink';
// Unplug aliases
export { default as LucideUnplug } from '../icons/unplug';
// Upload aliases
export { default as LucideUpload } from '../icons/upload';
// Usb aliases
export { default as LucideUsb } from '../icons/usb';
// UserCheck aliases
export { default as LucideUserCheck } from '../icons/user-check';
// UserLock aliases
export { default as LucideUserLock } from '../icons/user-lock';
// UserCog aliases
export { default as LucideUserCog } from '../icons/user-cog';
// UserMinus aliases
export { default as LucideUserMinus } from '../icons/user-minus';
// UserPen aliases
export { default as LucideUserPen } from '../icons/user-pen';
// UserPlus aliases
export { default as LucideUserPlus } from '../icons/user-plus';
// UserRoundPen aliases
export { default as LucideUserRoundPen } from '../icons/user-round-pen';
// UserRoundSearch aliases
export { default as LucideUserRoundSearch } from '../icons/user-round-search';
// UserSearch aliases
export { default as LucideUserSearch } from '../icons/user-search';
// UserStar aliases
export { default as LucideUserStar } from '../icons/user-star';
// UserX aliases
export { default as LucideUserX } from '../icons/user-x';
// User aliases
export { default as LucideUser } from '../icons/user';
// Users aliases
export { default as LucideUsers } from '../icons/users';
// UtilityPole aliases
export { default as LucideUtilityPole } from '../icons/utility-pole';
// Variable aliases
export { default as LucideVariable } from '../icons/variable';
// Vault aliases
export { default as LucideVault } from '../icons/vault';
// VectorSquare aliases
export { default as LucideVectorSquare } from '../icons/vector-square';
// Vegan aliases
export { default as LucideVegan } from '../icons/vegan';
// VenetianMask aliases
export { default as LucideVenetianMask } from '../icons/venetian-mask';
// Venus aliases
export { default as LucideVenus } from '../icons/venus';
// VenusAndMars aliases
export { default as LucideVenusAndMars } from '../icons/venus-and-mars';
// VibrateOff aliases
export { default as LucideVibrateOff } from '../icons/vibrate-off';
// Vibrate aliases
export { default as LucideVibrate } from '../icons/vibrate';
// VideoOff aliases
export { default as LucideVideoOff } from '../icons/video-off';
// Video aliases
export { default as LucideVideo } from '../icons/video';
// Videotape aliases
export { default as LucideVideotape } from '../icons/videotape';
// View aliases
export { default as LucideView } from '../icons/view';
// Voicemail aliases
export { default as LucideVoicemail } from '../icons/voicemail';
// Volleyball aliases
export { default as LucideVolleyball } from '../icons/volleyball';
// Volume1 aliases
export { default as LucideVolume1 } from '../icons/volume-1';
// Volume2 aliases
export { default as LucideVolume2 } from '../icons/volume-2';
// VolumeOff aliases
export { default as LucideVolumeOff } from '../icons/volume-off';
// VolumeX aliases
export { default as LucideVolumeX } from '../icons/volume-x';
// Volume aliases
export { default as LucideVolume } from '../icons/volume';
// Vote aliases
export { default as LucideVote } from '../icons/vote';
// WalletCards aliases
export { default as LucideWalletCards } from '../icons/wallet-cards';
// Wallet aliases
export { default as LucideWallet } from '../icons/wallet';
// Wallpaper aliases
export { default as LucideWallpaper } from '../icons/wallpaper';
// Wand aliases
export { default as LucideWand } from '../icons/wand';
// Warehouse aliases
export { default as LucideWarehouse } from '../icons/warehouse';
// WashingMachine aliases
export { default as LucideWashingMachine } from '../icons/washing-machine';
// Watch aliases
export { default as LucideWatch } from '../icons/watch';
// WavesLadder aliases
export { default as LucideWavesLadder } from '../icons/waves-ladder';
// Waves aliases
export { default as LucideWaves } from '../icons/waves';
// Waypoints aliases
export { default as LucideWaypoints } from '../icons/waypoints';
// Webcam aliases
export { default as LucideWebcam } from '../icons/webcam';
// WebhookOff aliases
export { default as LucideWebhookOff } from '../icons/webhook-off';
// Webhook aliases
export { default as LucideWebhook } from '../icons/webhook';
// Weight aliases
export { default as LucideWeight } from '../icons/weight';
// Wheat aliases
export { default as LucideWheat } from '../icons/wheat';
// WholeWord aliases
export { default as LucideWholeWord } from '../icons/whole-word';
// WheatOff aliases
export { default as LucideWheatOff } from '../icons/wheat-off';
// WifiHigh aliases
export { default as LucideWifiHigh } from '../icons/wifi-high';
// WifiCog aliases
export { default as LucideWifiCog } from '../icons/wifi-cog';
// WifiLow aliases
export { default as LucideWifiLow } from '../icons/wifi-low';
// WifiOff aliases
export { default as LucideWifiOff } from '../icons/wifi-off';
// WifiPen aliases
export { default as LucideWifiPen } from '../icons/wifi-pen';
// WifiSync aliases
export { default as LucideWifiSync } from '../icons/wifi-sync';
// WifiZero aliases
export { default as LucideWifiZero } from '../icons/wifi-zero';
// Wifi aliases
export { default as LucideWifi } from '../icons/wifi';
// WindArrowDown aliases
export { default as LucideWindArrowDown } from '../icons/wind-arrow-down';
// Wind aliases
export { default as LucideWind } from '../icons/wind';
// WineOff aliases
export { default as LucideWineOff } from '../icons/wine-off';
// Wine aliases
export { default as LucideWine } from '../icons/wine';
// Workflow aliases
export { default as LucideWorkflow } from '../icons/workflow';
// Worm aliases
export { default as LucideWorm } from '../icons/worm';
// Wrench aliases
export { default as LucideWrench } from '../icons/wrench';
// X aliases
export { default as LucideX } from '../icons/x';
// Youtube aliases
export { default as LucideYoutube } from '../icons/youtube';
// Zap aliases
export { default as LucideZap } from '../icons/zap';
// ZapOff aliases
export { default as LucideZapOff } from '../icons/zap-off';
// ZoomIn aliases
export { default as LucideZoomIn } from '../icons/zoom-in';
// ZoomOut aliases
export { default as LucideZoomOut } from '../icons/zoom-out';
// ArrowDown01 aliases
export { default as LucideArrowDown01 } from '../icons/arrow-down-0-1';
// ArrowDown10 aliases
export { default as LucideArrowDown10 } from '../icons/arrow-down-1-0';
// ArrowUp01 aliases
export { default as LucideArrowUp01 } from '../icons/arrow-up-0-1';
// ArrowUp10 aliases
export { default as LucideArrowUp10 } from '../icons/arrow-up-1-0';
// AlarmClockCheck aliases
export { default as LucideAlarmClockCheck } from '../icons/alarm-clock-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockCheck} instead. This alias will be removed in v1.0 */
default as LucideAlarmCheck } from '../icons/alarm-clock-check';
// AlarmClockMinus aliases
export { default as LucideAlarmClockMinus } from '../icons/alarm-clock-minus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockMinus} instead. This alias will be removed in v1.0 */
default as LucideAlarmMinus } from '../icons/alarm-clock-minus';
// AlarmClockPlus aliases
export { default as LucideAlarmClockPlus } from '../icons/alarm-clock-plus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link AlarmClockPlus} instead. This alias will be removed in v1.0 */
default as LucideAlarmPlus } from '../icons/alarm-clock-plus';
// ArrowDownAZ aliases
export { default as LucideArrowDownAZ } from '../icons/arrow-down-a-z';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownAZ} instead. This alias will be removed in v1.0 */
default as LucideArrowDownAz } from '../icons/arrow-down-a-z';
// ArrowDownZA aliases
export { default as LucideArrowDownZA } from '../icons/arrow-down-z-a';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownZA} instead. This alias will be removed in v1.0 */
default as LucideArrowDownZa } from '../icons/arrow-down-z-a';
// ArrowDownWideNarrow aliases
export { default as LucideArrowDownWideNarrow } from '../icons/arrow-down-wide-narrow';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowDownWideNarrow} instead. This alias will be removed in v1.0 */
default as LucideSortDesc } from '../icons/arrow-down-wide-narrow';
// ArrowUpNarrowWide aliases
export { default as LucideArrowUpNarrowWide } from '../icons/arrow-up-narrow-wide';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpNarrowWide} instead. This alias will be removed in v1.0 */
default as LucideSortAsc } from '../icons/arrow-up-narrow-wide';
// ArrowUpZA aliases
export { default as LucideArrowUpZA } from '../icons/arrow-up-z-a';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpZA} instead. This alias will be removed in v1.0 */
default as LucideArrowUpZa } from '../icons/arrow-up-z-a';
// ArrowUpAZ aliases
export { default as LucideArrowUpAZ } from '../icons/arrow-up-a-z';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ArrowUpAZ} instead. This alias will be removed in v1.0 */
default as LucideArrowUpAz } from '../icons/arrow-up-a-z';
// Axis3d aliases
export { default as LucideAxis3d } from '../icons/axis-3d';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Axis3d} instead. This alias will be removed in v1.0 */
default as LucideAxis3D } from '../icons/axis-3d';
// BadgeQuestionMark aliases
export { default as LucideBadgeQuestionMark } from '../icons/badge-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BadgeQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideBadgeHelp } from '../icons/badge-question-mark';
// BadgeCheck aliases
export { default as LucideBadgeCheck } from '../icons/badge-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BadgeCheck} instead. This alias will be removed in v1.0 */
default as LucideVerified } from '../icons/badge-check';
// BetweenHorizontalEnd aliases
export { default as LucideBetweenHorizontalEnd } from '../icons/between-horizontal-end';
export { 
/** @deprecated Renamed because of typo, use {@link BetweenHorizontalEnd} instead. This alias will be removed in v1.0 */
default as LucideBetweenHorizonalEnd } from '../icons/between-horizontal-end';
// BetweenHorizontalStart aliases
export { default as LucideBetweenHorizontalStart } from '../icons/between-horizontal-start';
export { 
/** @deprecated Renamed because of typo, use {@link BetweenHorizontalStart} instead. This alias will be removed in v1.0 */
default as LucideBetweenHorizonalStart } from '../icons/between-horizontal-start';
// BookDashed aliases
export { default as LucideBookDashed } from '../icons/book-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link BookDashed} instead. This alias will be removed in v1.0.0 */
default as LucideBookTemplate } from '../icons/book-dashed';
// Braces aliases
export { default as LucideBraces } from '../icons/braces';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Braces} instead. This alias will be removed in v1.0 */
default as LucideCurlyBraces } from '../icons/braces';
// Captions aliases
export { default as LucideCaptions } from '../icons/captions';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Captions} instead. This alias will be removed in v1.0 */
default as LucideSubtitles } from '../icons/captions';
// ChartArea aliases
export { default as LucideChartArea } from '../icons/chart-area';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartArea} instead. This alias will be removed in v1.0 */
default as LucideAreaChart } from '../icons/chart-area';
// ChartBarBig aliases
export { default as LucideChartBarBig } from '../icons/chart-bar-big';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartBarBig} instead. This alias will be removed in v1.0 */
default as LucideBarChartHorizontalBig } from '../icons/chart-bar-big';
// ChartCandlestick aliases
export { default as LucideChartCandlestick } from '../icons/chart-candlestick';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartCandlestick} instead. This alias will be removed in v1.0 */
default as LucideCandlestickChart } from '../icons/chart-candlestick';
// ChartBar aliases
export { default as LucideChartBar } from '../icons/chart-bar';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartBar} instead. This alias will be removed in v1.0 */
default as LucideBarChartHorizontal } from '../icons/chart-bar';
// ChartColumnBig aliases
export { default as LucideChartColumnBig } from '../icons/chart-column-big';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumnBig} instead. This alias will be removed in v1.0 */
default as LucideBarChartBig } from '../icons/chart-column-big';
// ChartColumnIncreasing aliases
export { default as LucideChartColumnIncreasing } from '../icons/chart-column-increasing';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumnIncreasing} instead. This alias will be removed in v1.0 */
default as LucideBarChart4 } from '../icons/chart-column-increasing';
// ChartColumn aliases
export { default as LucideChartColumn } from '../icons/chart-column';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartColumn} instead. This alias will be removed in v1.0 */
default as LucideBarChart3 } from '../icons/chart-column';
// ChartLine aliases
export { default as LucideChartLine } from '../icons/chart-line';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartLine} instead. This alias will be removed in v1.0 */
default as LucideLineChart } from '../icons/chart-line';
// ChartNoAxesColumnIncreasing aliases
export { default as LucideChartNoAxesColumnIncreasing } from '../icons/chart-no-axes-column-increasing';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesColumnIncreasing} instead. This alias will be removed in v1.0 */
default as LucideBarChart } from '../icons/chart-no-axes-column-increasing';
// ChartNoAxesColumn aliases
export { default as LucideChartNoAxesColumn } from '../icons/chart-no-axes-column';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesColumn} instead. This alias will be removed in v1.0 */
default as LucideBarChart2 } from '../icons/chart-no-axes-column';
// ChartNoAxesGantt aliases
export { default as LucideChartNoAxesGantt } from '../icons/chart-no-axes-gantt';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartNoAxesGantt} instead. This alias will be removed in v1.0 */
default as LucideGanttChart } from '../icons/chart-no-axes-gantt';
// ChartScatter aliases
export { default as LucideChartScatter } from '../icons/chart-scatter';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartScatter} instead. This alias will be removed in v1.0 */
default as LucideScatterChart } from '../icons/chart-scatter';
// ChartPie aliases
export { default as LucideChartPie } from '../icons/chart-pie';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ChartPie} instead. This alias will be removed in v1.0 */
default as LucidePieChart } from '../icons/chart-pie';
// Chromium aliases
export { default as LucideChromium } from '../icons/chromium';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Chromium} instead. This alias will be removed in v1.0 */
default as LucideChrome } from '../icons/chromium';
// CircleAlert aliases
export { default as LucideCircleAlert } from '../icons/circle-alert';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleAlert} instead. This alias will be removed in v1.0 */
default as LucideAlertCircle } from '../icons/circle-alert';
// CircleArrowDown aliases
export { default as LucideCircleArrowDown } from '../icons/circle-arrow-down';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowDown} instead. This alias will be removed in v1.0 */
default as LucideArrowDownCircle } from '../icons/circle-arrow-down';
// CircleArrowLeft aliases
export { default as LucideCircleArrowLeft } from '../icons/circle-arrow-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowLeftCircle } from '../icons/circle-arrow-left';
// CircleArrowOutDownLeft aliases
export { default as LucideCircleArrowOutDownLeft } from '../icons/circle-arrow-out-down-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutDownLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowDownLeftFromCircle } from '../icons/circle-arrow-out-down-left';
// CircleArrowOutDownRight aliases
export { default as LucideCircleArrowOutDownRight } from '../icons/circle-arrow-out-down-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutDownRight} instead. This alias will be removed in v1.0 */
default as LucideArrowDownRightFromCircle } from '../icons/circle-arrow-out-down-right';
// CircleArrowOutUpLeft aliases
export { default as LucideCircleArrowOutUpLeft } from '../icons/circle-arrow-out-up-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutUpLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowUpLeftFromCircle } from '../icons/circle-arrow-out-up-left';
// CircleArrowOutUpRight aliases
export { default as LucideCircleArrowOutUpRight } from '../icons/circle-arrow-out-up-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowOutUpRight} instead. This alias will be removed in v1.0 */
default as LucideArrowUpRightFromCircle } from '../icons/circle-arrow-out-up-right';
// CircleArrowUp aliases
export { default as LucideCircleArrowUp } from '../icons/circle-arrow-up';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowUp} instead. This alias will be removed in v1.0 */
default as LucideArrowUpCircle } from '../icons/circle-arrow-up';
// CircleArrowRight aliases
export { default as LucideCircleArrowRight } from '../icons/circle-arrow-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleArrowRight} instead. This alias will be removed in v1.0 */
default as LucideArrowRightCircle } from '../icons/circle-arrow-right';
// CircleCheckBig aliases
export { default as LucideCircleCheckBig } from '../icons/circle-check-big';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleCheckBig} instead. This alias will be removed in v1.0 */
default as LucideCheckCircle } from '../icons/circle-check-big';
// CircleCheck aliases
export { default as LucideCircleCheck } from '../icons/circle-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleCheck} instead. This alias will be removed in v1.0 */
default as LucideCheckCircle2 } from '../icons/circle-check';
// CircleChevronDown aliases
export { default as LucideCircleChevronDown } from '../icons/circle-chevron-down';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronDown} instead. This alias will be removed in v1.0 */
default as LucideChevronDownCircle } from '../icons/circle-chevron-down';
// CircleChevronLeft aliases
export { default as LucideCircleChevronLeft } from '../icons/circle-chevron-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronLeft} instead. This alias will be removed in v1.0 */
default as LucideChevronLeftCircle } from '../icons/circle-chevron-left';
// CircleChevronUp aliases
export { default as LucideCircleChevronUp } from '../icons/circle-chevron-up';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronUp} instead. This alias will be removed in v1.0 */
default as LucideChevronUpCircle } from '../icons/circle-chevron-up';
// CircleChevronRight aliases
export { default as LucideCircleChevronRight } from '../icons/circle-chevron-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleChevronRight} instead. This alias will be removed in v1.0 */
default as LucideChevronRightCircle } from '../icons/circle-chevron-right';
// CircleDivide aliases
export { default as LucideCircleDivide } from '../icons/circle-divide';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleDivide} instead. This alias will be removed in v1.0 */
default as LucideDivideCircle } from '../icons/circle-divide';
// CircleGauge aliases
export { default as LucideCircleGauge } from '../icons/circle-gauge';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleGauge} instead. This alias will be removed in v1.0 */
default as LucideGaugeCircle } from '../icons/circle-gauge';
// CircleMinus aliases
export { default as LucideCircleMinus } from '../icons/circle-minus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleMinus} instead. This alias will be removed in v1.0 */
default as LucideMinusCircle } from '../icons/circle-minus';
// CircleParkingOff aliases
export { default as LucideCircleParkingOff } from '../icons/circle-parking-off';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleParkingOff} instead. This alias will be removed in v1.0 */
default as LucideParkingCircleOff } from '../icons/circle-parking-off';
// CircleParking aliases
export { default as LucideCircleParking } from '../icons/circle-parking';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleParking} instead. This alias will be removed in v1.0 */
default as LucideParkingCircle } from '../icons/circle-parking';
// CirclePause aliases
export { default as LucideCirclePause } from '../icons/circle-pause';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePause} instead. This alias will be removed in v1.0 */
default as LucidePauseCircle } from '../icons/circle-pause';
// CirclePercent aliases
export { default as LucideCirclePercent } from '../icons/circle-percent';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePercent} instead. This alias will be removed in v1.0 */
default as LucidePercentCircle } from '../icons/circle-percent';
// CirclePlay aliases
export { default as LucideCirclePlay } from '../icons/circle-play';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePlay} instead. This alias will be removed in v1.0 */
default as LucidePlayCircle } from '../icons/circle-play';
// CirclePlus aliases
export { default as LucideCirclePlus } from '../icons/circle-plus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePlus} instead. This alias will be removed in v1.0 */
default as LucidePlusCircle } from '../icons/circle-plus';
// CirclePower aliases
export { default as LucideCirclePower } from '../icons/circle-power';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CirclePower} instead. This alias will be removed in v1.0 */
default as LucidePowerCircle } from '../icons/circle-power';
// CircleQuestionMark aliases
export { default as LucideCircleQuestionMark } from '../icons/circle-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideHelpCircle } from '../icons/circle-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideCircleHelp } from '../icons/circle-question-mark';
// CircleSlash2 aliases
export { default as LucideCircleSlash2 } from '../icons/circle-slash-2';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleSlash2} instead. This alias will be removed in v1.0 */
default as LucideCircleSlashed } from '../icons/circle-slash-2';
// CircleStop aliases
export { default as LucideCircleStop } from '../icons/circle-stop';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleStop} instead. This alias will be removed in v1.0 */
default as LucideStopCircle } from '../icons/circle-stop';
// CircleUserRound aliases
export { default as LucideCircleUserRound } from '../icons/circle-user-round';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleUserRound} instead. This alias will be removed in v1.0 */
default as LucideUserCircle2 } from '../icons/circle-user-round';
// CircleUser aliases
export { default as LucideCircleUser } from '../icons/circle-user';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleUser} instead. This alias will be removed in v1.0 */
default as LucideUserCircle } from '../icons/circle-user';
// CircleX aliases
export { default as LucideCircleX } from '../icons/circle-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CircleX} instead. This alias will be removed in v1.0 */
default as LucideXCircle } from '../icons/circle-x';
// ClipboardPenLine aliases
export { default as LucideClipboardPenLine } from '../icons/clipboard-pen-line';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ClipboardPenLine} instead. This alias will be removed in v1.0 */
default as LucideClipboardSignature } from '../icons/clipboard-pen-line';
// ClipboardPen aliases
export { default as LucideClipboardPen } from '../icons/clipboard-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ClipboardPen} instead. This alias will be removed in v1.0 */
default as LucideClipboardEdit } from '../icons/clipboard-pen';
// CloudDownload aliases
export { default as LucideCloudDownload } from '../icons/cloud-download';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CloudDownload} instead. This alias will be removed in v1.0 */
default as LucideDownloadCloud } from '../icons/cloud-download';
// CloudUpload aliases
export { default as LucideCloudUpload } from '../icons/cloud-upload';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CloudUpload} instead. This alias will be removed in v1.0 */
default as LucideUploadCloud } from '../icons/cloud-upload';
// CodeXml aliases
export { default as LucideCodeXml } from '../icons/code-xml';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link CodeXml} instead. This alias will be removed in v1.0 */
default as LucideCode2 } from '../icons/code-xml';
// Columns2 aliases
export { default as LucideColumns2 } from '../icons/columns-2';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns2} instead. This alias will be removed in v1.0 */
default as LucideColumns } from '../icons/columns-2';
// Columns3Cog aliases
export { default as LucideColumns3Cog } from '../icons/columns-3-cog';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3Cog} instead. This alias will be removed in v1.0 */
default as LucideColumnsSettings } from '../icons/columns-3-cog';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3Cog} instead. This alias will be removed in v1.0 */
default as LucideTableConfig } from '../icons/columns-3-cog';
// Columns3 aliases
export { default as LucideColumns3 } from '../icons/columns-3';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Columns3} instead. This alias will be removed in v1.0 */
default as LucidePanelsLeftRight } from '../icons/columns-3';
// DiamondPercent aliases
export { default as LucideDiamondPercent } from '../icons/diamond-percent';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link DiamondPercent} instead. This alias will be removed in v1.0 */
default as LucidePercentDiamond } from '../icons/diamond-percent';
// ContactRound aliases
export { default as LucideContactRound } from '../icons/contact-round';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ContactRound} instead. This alias will be removed in v1.0 */
default as LucideContact2 } from '../icons/contact-round';
// Earth aliases
export { default as LucideEarth } from '../icons/earth';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Earth} instead. This alias will be removed in v1.0 */
default as LucideGlobe2 } from '../icons/earth';
// EllipsisVertical aliases
export { default as LucideEllipsisVertical } from '../icons/ellipsis-vertical';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link EllipsisVertical} instead. This alias will be removed in v1.0 */
default as LucideMoreVertical } from '../icons/ellipsis-vertical';
// Ellipsis aliases
export { default as LucideEllipsis } from '../icons/ellipsis';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Ellipsis} instead. This alias will be removed in v1.0 */
default as LucideMoreHorizontal } from '../icons/ellipsis';
// FileAxis3d aliases
export { default as LucideFileAxis3d } from '../icons/file-axis-3d';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileAxis3d} instead. This alias will be removed in v1.0 */
default as LucideFileAxis3D } from '../icons/file-axis-3d';
// FileChartColumnIncreasing aliases
export { default as LucideFileChartColumnIncreasing } from '../icons/file-chart-column-increasing';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartColumnIncreasing} instead. This alias will be removed in v1.0 */
default as LucideFileBarChart } from '../icons/file-chart-column-increasing';
// FileChartColumn aliases
export { default as LucideFileChartColumn } from '../icons/file-chart-column';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartColumn} instead. This alias will be removed in v1.0 */
default as LucideFileBarChart2 } from '../icons/file-chart-column';
// FileChartLine aliases
export { default as LucideFileChartLine } from '../icons/file-chart-line';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartLine} instead. This alias will be removed in v1.0 */
default as LucideFileLineChart } from '../icons/file-chart-line';
// FileChartPie aliases
export { default as LucideFileChartPie } from '../icons/file-chart-pie';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileChartPie} instead. This alias will be removed in v1.0 */
default as LucideFilePieChart } from '../icons/file-chart-pie';
// FileCog aliases
export { default as LucideFileCog } from '../icons/file-cog';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileCog} instead. This alias will be removed in v1.0 */
default as LucideFileCog2 } from '../icons/file-cog';
// FilePenLine aliases
export { default as LucideFilePenLine } from '../icons/file-pen-line';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePenLine} instead. This alias will be removed in v1.0 */
default as LucideFileSignature } from '../icons/file-pen-line';
// FilePen aliases
export { default as LucideFilePen } from '../icons/file-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePen} instead. This alias will be removed in v1.0 */
default as LucideFileEdit } from '../icons/file-pen';
// FilePlay aliases
export { default as LucideFilePlay } from '../icons/file-play';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FilePlay} instead. This alias will be removed in v1.0 */
default as LucideFileVideo } from '../icons/file-play';
// FileQuestionMark aliases
export { default as LucideFileQuestionMark } from '../icons/file-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideFileQuestion } from '../icons/file-question-mark';
// FileVideoCamera aliases
export { default as LucideFileVideoCamera } from '../icons/file-video-camera';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FileVideoCamera} instead. This alias will be removed in v1.0 */
default as LucideFileVideo2 } from '../icons/file-video-camera';
// FolderCog aliases
export { default as LucideFolderCog } from '../icons/folder-cog';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FolderCog} instead. This alias will be removed in v1.0 */
default as LucideFolderCog2 } from '../icons/folder-cog';
// FolderPen aliases
export { default as LucideFolderPen } from '../icons/folder-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FolderPen} instead. This alias will be removed in v1.0 */
default as LucideFolderEdit } from '../icons/folder-pen';
// FunnelX aliases
export { default as LucideFunnelX } from '../icons/funnel-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link FunnelX} instead. This alias will be removed in v1.0 */
default as LucideFilterX } from '../icons/funnel-x';
// Funnel aliases
export { default as LucideFunnel } from '../icons/funnel';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Funnel} instead. This alias will be removed in v1.0 */
default as LucideFilter } from '../icons/funnel';
// GitCommitHorizontal aliases
export { default as LucideGitCommitHorizontal } from '../icons/git-commit-horizontal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link GitCommitHorizontal} instead. This alias will be removed in v1.0 */
default as LucideGitCommit } from '../icons/git-commit-horizontal';
// Grid2x2Check aliases
export { default as LucideGrid2x2Check } from '../icons/grid-2x2-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2Check} instead. This alias will be removed in v1.0 */
default as LucideGrid2X2Check } from '../icons/grid-2x2-check';
// Grid2x2Plus aliases
export { default as LucideGrid2x2Plus } from '../icons/grid-2x2-plus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2Plus} instead. This alias will be removed in v1.0 */
default as LucideGrid2X2Plus } from '../icons/grid-2x2-plus';
// Grid2x2 aliases
export { default as LucideGrid2x2 } from '../icons/grid-2x2';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2} instead. This alias will be removed in v1.0 */
default as LucideGrid2X2 } from '../icons/grid-2x2';
// Grid2x2X aliases
export { default as LucideGrid2x2X } from '../icons/grid-2x2-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid2x2X} instead. This alias will be removed in v1.0 */
default as LucideGrid2X2X } from '../icons/grid-2x2-x';
// Grid3x3 aliases
export { default as LucideGrid3x3 } from '../icons/grid-3x3';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid3x3} instead. This alias will be removed in v1.0 */
default as LucideGrid } from '../icons/grid-3x3';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Grid3x3} instead. This alias will be removed in v1.0 */
default as LucideGrid3X3 } from '../icons/grid-3x3';
// HandGrab aliases
export { default as LucideHandGrab } from '../icons/hand-grab';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link HandGrab} instead. This alias will be removed in v1.0 */
default as LucideGrab } from '../icons/hand-grab';
// HandHelping aliases
export { default as LucideHandHelping } from '../icons/hand-helping';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link HandHelping} instead. This alias will be removed in v1.0 */
default as LucideHelpingHand } from '../icons/hand-helping';
// House aliases
export { default as LucideHouse } from '../icons/house';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link House} instead. This alias will be removed in v1.0 */
default as LucideHome } from '../icons/house';
// IceCreamBowl aliases
export { default as LucideIceCreamBowl } from '../icons/ice-cream-bowl';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IceCreamBowl} instead. This alias will be removed in v1.0 */
default as LucideIceCream2 } from '../icons/ice-cream-bowl';
// IceCreamCone aliases
export { default as LucideIceCreamCone } from '../icons/ice-cream-cone';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link IceCreamCone} instead. This alias will be removed in v1.0 */
default as LucideIceCream } from '../icons/ice-cream-cone';
// LaptopMinimal aliases
export { default as LucideLaptopMinimal } from '../icons/laptop-minimal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LaptopMinimal} instead. This alias will be removed in v1.0 */
default as LucideLaptop2 } from '../icons/laptop-minimal';
// Layers aliases
export { default as LucideLayers } from '../icons/layers';
export { 
/** @deprecated The icon was combined with another icon that shares the same use case, use {@link Layers} instead. This alias will be removed in v1.0 */
default as LucideLayers3 } from '../icons/layers';
// ListIndentIncrease aliases
export { default as LucideListIndentIncrease } from '../icons/list-indent-increase';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ListIndentIncrease} instead. This alias will be removed in v1.0 */
default as LucideIndent } from '../icons/list-indent-increase';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ListIndentIncrease} instead. This alias will be removed in v1.0 */
default as LucideIndentIncrease } from '../icons/list-indent-increase';
// ListIndentDecrease aliases
export { default as LucideListIndentDecrease } from '../icons/list-indent-decrease';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ListIndentDecrease} instead. This alias will be removed in v1.0 */
default as LucideOutdent } from '../icons/list-indent-decrease';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ListIndentDecrease} instead. This alias will be removed in v1.0 */
default as LucideIndentDecrease } from '../icons/list-indent-decrease';
// LoaderCircle aliases
export { default as LucideLoaderCircle } from '../icons/loader-circle';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LoaderCircle} instead. This alias will be removed in v1.0 */
default as LucideLoader2 } from '../icons/loader-circle';
// LockKeyholeOpen aliases
export { default as LucideLockKeyholeOpen } from '../icons/lock-keyhole-open';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LockKeyholeOpen} instead. This alias will be removed in v1.0 */
default as LucideUnlockKeyhole } from '../icons/lock-keyhole-open';
// MailQuestionMark aliases
export { default as LucideMailQuestionMark } from '../icons/mail-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MailQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideMailQuestion } from '../icons/mail-question-mark';
// LockOpen aliases
export { default as LucideLockOpen } from '../icons/lock-open';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link LockOpen} instead. This alias will be removed in v1.0 */
default as LucideUnlock } from '../icons/lock-open';
// MapPinPen aliases
export { default as LucideMapPinPen } from '../icons/map-pin-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MapPinPen} instead. This alias will be removed in v1.0 */
default as LucideLocationEdit } from '../icons/map-pin-pen';
// MessageCircleQuestionMark aliases
export { default as LucideMessageCircleQuestionMark } from '../icons/message-circle-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MessageCircleQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideMessageCircleQuestion } from '../icons/message-circle-question-mark';
// MicVocal aliases
export { default as LucideMicVocal } from '../icons/mic-vocal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link MicVocal} instead. This alias will be removed in v1.0 */
default as LucideMic2 } from '../icons/mic-vocal';
// Move3d aliases
export { default as LucideMove3d } from '../icons/move-3d';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Move3d} instead. This alias will be removed in v1.0 */
default as LucideMove3D } from '../icons/move-3d';
// OctagonAlert aliases
export { default as LucideOctagonAlert } from '../icons/octagon-alert';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonAlert} instead. This alias will be removed in v1.0 */
default as LucideAlertOctagon } from '../icons/octagon-alert';
// OctagonPause aliases
export { default as LucideOctagonPause } from '../icons/octagon-pause';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonPause} instead. This alias will be removed in v1.0 */
default as LucidePauseOctagon } from '../icons/octagon-pause';
// OctagonX aliases
export { default as LucideOctagonX } from '../icons/octagon-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link OctagonX} instead. This alias will be removed in v1.0 */
default as LucideXOctagon } from '../icons/octagon-x';
// PanelBottomDashed aliases
export { default as LucidePanelBottomDashed } from '../icons/panel-bottom-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelBottomDashed} instead. This alias will be removed in v1.0 */
default as LucidePanelBottomInactive } from '../icons/panel-bottom-dashed';
// PaintbrushVertical aliases
export { default as LucidePaintbrushVertical } from '../icons/paintbrush-vertical';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PaintbrushVertical} instead. This alias will be removed in v1.0 */
default as LucidePaintbrush2 } from '../icons/paintbrush-vertical';
// PanelLeftClose aliases
export { default as LucidePanelLeftClose } from '../icons/panel-left-close';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftClose} instead. This alias will be removed in v1.0 */
default as LucideSidebarClose } from '../icons/panel-left-close';
// PanelLeftDashed aliases
export { default as LucidePanelLeftDashed } from '../icons/panel-left-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftDashed} instead. This alias will be removed in v1.0 */
default as LucidePanelLeftInactive } from '../icons/panel-left-dashed';
// PanelLeft aliases
export { default as LucidePanelLeft } from '../icons/panel-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeft} instead. This alias will be removed in v1.0 */
default as LucideSidebar } from '../icons/panel-left';
// PanelLeftOpen aliases
export { default as LucidePanelLeftOpen } from '../icons/panel-left-open';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelLeftOpen} instead. This alias will be removed in v1.0 */
default as LucideSidebarOpen } from '../icons/panel-left-open';
// PanelRightDashed aliases
export { default as LucidePanelRightDashed } from '../icons/panel-right-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelRightDashed} instead. This alias will be removed in v1.0 */
default as LucidePanelRightInactive } from '../icons/panel-right-dashed';
// PanelTopDashed aliases
export { default as LucidePanelTopDashed } from '../icons/panel-top-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelTopDashed} instead. This alias will be removed in v1.0 */
default as LucidePanelTopInactive } from '../icons/panel-top-dashed';
// PanelsTopLeft aliases
export { default as LucidePanelsTopLeft } from '../icons/panels-top-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PanelsTopLeft} instead. This alias will be removed in v1.0 */
default as LucideLayout } from '../icons/panels-top-left';
// Pen aliases
export { default as LucidePen } from '../icons/pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Pen} instead. This alias will be removed in v1.0 */
default as LucideEdit2 } from '../icons/pen';
// PenLine aliases
export { default as LucidePenLine } from '../icons/pen-line';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PenLine} instead. This alias will be removed in v1.0 */
default as LucideEdit3 } from '../icons/pen-line';
// RectangleEllipsis aliases
export { default as LucideRectangleEllipsis } from '../icons/rectangle-ellipsis';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link RectangleEllipsis} instead. This alias will be removed in v1.0 */
default as LucideFormInput } from '../icons/rectangle-ellipsis';
// Rotate3d aliases
export { default as LucideRotate3d } from '../icons/rotate-3d';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rotate3d} instead. This alias will be removed in v1.0 */
default as LucideRotate3D } from '../icons/rotate-3d';
// PlugZap aliases
export { default as LucidePlugZap } from '../icons/plug-zap';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link PlugZap} instead. This alias will be removed in v1.0 */
default as LucidePlugZap2 } from '../icons/plug-zap';
// Rows2 aliases
export { default as LucideRows2 } from '../icons/rows-2';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rows2} instead. This alias will be removed in v1.0 */
default as LucideRows } from '../icons/rows-2';
// Rows3 aliases
export { default as LucideRows3 } from '../icons/rows-3';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Rows3} instead. This alias will be removed in v1.0 */
default as LucidePanelsTopBottom } from '../icons/rows-3';
// Scale3d aliases
export { default as LucideScale3d } from '../icons/scale-3d';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Scale3d} instead. This alias will be removed in v1.0 */
default as LucideScale3D } from '../icons/scale-3d';
// SendHorizontal aliases
export { default as LucideSendHorizontal } from '../icons/send-horizontal';
export { 
/** @deprecated Renamed because of typo, use {@link SendHorizontal} instead. This alias will be removed in v1.0 */
default as LucideSendHorizonal } from '../icons/send-horizontal';
// ShieldQuestionMark aliases
export { default as LucideShieldQuestionMark } from '../icons/shield-question-mark';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ShieldQuestionMark} instead. This alias will be removed in v1.0 */
default as LucideShieldQuestion } from '../icons/shield-question-mark';
// SlidersVertical aliases
export { default as LucideSlidersVertical } from '../icons/sliders-vertical';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SlidersVertical} instead. This alias will be removed in v1.0 */
default as LucideSliders } from '../icons/sliders-vertical';
// ShieldX aliases
export { default as LucideShieldX } from '../icons/shield-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link ShieldX} instead. This alias will be removed in v1.0 */
default as LucideShieldClose } from '../icons/shield-x';
// SquareActivity aliases
export { default as LucideSquareActivity } from '../icons/square-activity';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareActivity} instead. This alias will be removed in v1.0 */
default as LucideActivitySquare } from '../icons/square-activity';
// SquareArrowDownLeft aliases
export { default as LucideSquareArrowDownLeft } from '../icons/square-arrow-down-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDownLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowDownLeftSquare } from '../icons/square-arrow-down-left';
// Sparkles aliases
export { default as LucideSparkles } from '../icons/sparkles';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Sparkles} instead. This alias will be removed in v1.0 */
default as LucideStars } from '../icons/sparkles';
// SquareArrowDownRight aliases
export { default as LucideSquareArrowDownRight } from '../icons/square-arrow-down-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDownRight} instead. This alias will be removed in v1.0 */
default as LucideArrowDownRightSquare } from '../icons/square-arrow-down-right';
// SquareArrowDown aliases
export { default as LucideSquareArrowDown } from '../icons/square-arrow-down';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowDown} instead. This alias will be removed in v1.0 */
default as LucideArrowDownSquare } from '../icons/square-arrow-down';
// SquareArrowOutDownLeft aliases
export { default as LucideSquareArrowOutDownLeft } from '../icons/square-arrow-out-down-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutDownLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowDownLeftFromSquare } from '../icons/square-arrow-out-down-left';
// SquareArrowOutDownRight aliases
export { default as LucideSquareArrowOutDownRight } from '../icons/square-arrow-out-down-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutDownRight} instead. This alias will be removed in v1.0 */
default as LucideArrowDownRightFromSquare } from '../icons/square-arrow-out-down-right';
// SquareArrowLeft aliases
export { default as LucideSquareArrowLeft } from '../icons/square-arrow-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowLeftSquare } from '../icons/square-arrow-left';
// SquareArrowOutUpLeft aliases
export { default as LucideSquareArrowOutUpLeft } from '../icons/square-arrow-out-up-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutUpLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowUpLeftFromSquare } from '../icons/square-arrow-out-up-left';
// SquareArrowOutUpRight aliases
export { default as LucideSquareArrowOutUpRight } from '../icons/square-arrow-out-up-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowOutUpRight} instead. This alias will be removed in v1.0 */
default as LucideArrowUpRightFromSquare } from '../icons/square-arrow-out-up-right';
// SquareArrowRight aliases
export { default as LucideSquareArrowRight } from '../icons/square-arrow-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowRight} instead. This alias will be removed in v1.0 */
default as LucideArrowRightSquare } from '../icons/square-arrow-right';
// SquareArrowUpLeft aliases
export { default as LucideSquareArrowUpLeft } from '../icons/square-arrow-up-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUpLeft} instead. This alias will be removed in v1.0 */
default as LucideArrowUpLeftSquare } from '../icons/square-arrow-up-left';
// SquareArrowUpRight aliases
export { default as LucideSquareArrowUpRight } from '../icons/square-arrow-up-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUpRight} instead. This alias will be removed in v1.0 */
default as LucideArrowUpRightSquare } from '../icons/square-arrow-up-right';
// SquareAsterisk aliases
export { default as LucideSquareAsterisk } from '../icons/square-asterisk';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareAsterisk} instead. This alias will be removed in v1.0 */
default as LucideAsteriskSquare } from '../icons/square-asterisk';
// SquareArrowUp aliases
export { default as LucideSquareArrowUp } from '../icons/square-arrow-up';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareArrowUp} instead. This alias will be removed in v1.0 */
default as LucideArrowUpSquare } from '../icons/square-arrow-up';
// SquareBottomDashedScissors aliases
export { default as LucideSquareBottomDashedScissors } from '../icons/square-bottom-dashed-scissors';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareBottomDashedScissors} instead. This alias will be removed in v1.0 */
default as LucideScissorsSquareDashedBottom } from '../icons/square-bottom-dashed-scissors';
// SquareChartGantt aliases
export { default as LucideSquareChartGantt } from '../icons/square-chart-gantt';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChartGantt} instead. This alias will be removed in v1.0 */
default as LucideGanttChartSquare } from '../icons/square-chart-gantt';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChartGantt} instead. This alias will be removed in v1.0 */
default as LucideSquareGanttChart } from '../icons/square-chart-gantt';
// SquareCheckBig aliases
export { default as LucideSquareCheckBig } from '../icons/square-check-big';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCheckBig} instead. This alias will be removed in v1.0 */
default as LucideCheckSquare } from '../icons/square-check-big';
// SquareCheck aliases
export { default as LucideSquareCheck } from '../icons/square-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCheck} instead. This alias will be removed in v1.0 */
default as LucideCheckSquare2 } from '../icons/square-check';
// SquareChevronDown aliases
export { default as LucideSquareChevronDown } from '../icons/square-chevron-down';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronDown} instead. This alias will be removed in v1.0 */
default as LucideChevronDownSquare } from '../icons/square-chevron-down';
// SquareChevronRight aliases
export { default as LucideSquareChevronRight } from '../icons/square-chevron-right';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronRight} instead. This alias will be removed in v1.0 */
default as LucideChevronRightSquare } from '../icons/square-chevron-right';
// SquareChevronUp aliases
export { default as LucideSquareChevronUp } from '../icons/square-chevron-up';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronUp} instead. This alias will be removed in v1.0 */
default as LucideChevronUpSquare } from '../icons/square-chevron-up';
// SquareCode aliases
export { default as LucideSquareCode } from '../icons/square-code';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareCode} instead. This alias will be removed in v1.0 */
default as LucideCodeSquare } from '../icons/square-code';
// SquareChevronLeft aliases
export { default as LucideSquareChevronLeft } from '../icons/square-chevron-left';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareChevronLeft} instead. This alias will be removed in v1.0 */
default as LucideChevronLeftSquare } from '../icons/square-chevron-left';
// SquareDashedKanban aliases
export { default as LucideSquareDashedKanban } from '../icons/square-dashed-kanban';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashedKanban} instead. This alias will be removed in v1.0 */
default as LucideKanbanSquareDashed } from '../icons/square-dashed-kanban';
// SquareDashedMousePointer aliases
export { default as LucideSquareDashedMousePointer } from '../icons/square-dashed-mouse-pointer';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashedMousePointer} instead. This alias will be removed in v1.0 */
default as LucideMousePointerSquareDashed } from '../icons/square-dashed-mouse-pointer';
// SquareDashed aliases
export { default as LucideSquareDashed } from '../icons/square-dashed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDashed} instead. This alias will be removed in v1.0 */
default as LucideBoxSelect } from '../icons/square-dashed';
// SquareDivide aliases
export { default as LucideSquareDivide } from '../icons/square-divide';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDivide} instead. This alias will be removed in v1.0 */
default as LucideDivideSquare } from '../icons/square-divide';
// SquareDot aliases
export { default as LucideSquareDot } from '../icons/square-dot';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareDot} instead. This alias will be removed in v1.0 */
default as LucideDotSquare } from '../icons/square-dot';
// SquareEqual aliases
export { default as LucideSquareEqual } from '../icons/square-equal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareEqual} instead. This alias will be removed in v1.0 */
default as LucideEqualSquare } from '../icons/square-equal';
// SquareFunction aliases
export { default as LucideSquareFunction } from '../icons/square-function';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareFunction} instead. This alias will be removed in v1.0 */
default as LucideFunctionSquare } from '../icons/square-function';
// SquareKanban aliases
export { default as LucideSquareKanban } from '../icons/square-kanban';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareKanban} instead. This alias will be removed in v1.0 */
default as LucideKanbanSquare } from '../icons/square-kanban';
// SquareLibrary aliases
export { default as LucideSquareLibrary } from '../icons/square-library';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareLibrary} instead. This alias will be removed in v1.0 */
default as LucideLibrarySquare } from '../icons/square-library';
// SquareM aliases
export { default as LucideSquareM } from '../icons/square-m';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareM} instead. This alias will be removed in v1.0 */
default as LucideMSquare } from '../icons/square-m';
// SquareMenu aliases
export { default as LucideSquareMenu } from '../icons/square-menu';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMenu} instead. This alias will be removed in v1.0 */
default as LucideMenuSquare } from '../icons/square-menu';
// SquareMinus aliases
export { default as LucideSquareMinus } from '../icons/square-minus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMinus} instead. This alias will be removed in v1.0 */
default as LucideMinusSquare } from '../icons/square-minus';
// SquareMousePointer aliases
export { default as LucideSquareMousePointer } from '../icons/square-mouse-pointer';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareMousePointer} instead. This alias will be removed in v1.0 */
default as LucideInspect } from '../icons/square-mouse-pointer';
// SquareParkingOff aliases
export { default as LucideSquareParkingOff } from '../icons/square-parking-off';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareParkingOff} instead. This alias will be removed in v1.0 */
default as LucideParkingSquareOff } from '../icons/square-parking-off';
// SquareParking aliases
export { default as LucideSquareParking } from '../icons/square-parking';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareParking} instead. This alias will be removed in v1.0 */
default as LucideParkingSquare } from '../icons/square-parking';
// SquarePen aliases
export { default as LucideSquarePen } from '../icons/square-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as LucidePenBox } from '../icons/square-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as LucideEdit } from '../icons/square-pen';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePen} instead. This alias will be removed in v1.0 */
default as LucidePenSquare } from '../icons/square-pen';
// SquarePi aliases
export { default as LucideSquarePi } from '../icons/square-pi';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePi} instead. This alias will be removed in v1.0 */
default as LucidePiSquare } from '../icons/square-pi';
// SquarePilcrow aliases
export { default as LucideSquarePilcrow } from '../icons/square-pilcrow';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePilcrow} instead. This alias will be removed in v1.0 */
default as LucidePilcrowSquare } from '../icons/square-pilcrow';
// SquarePercent aliases
export { default as LucideSquarePercent } from '../icons/square-percent';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePercent} instead. This alias will be removed in v1.0 */
default as LucidePercentSquare } from '../icons/square-percent';
// SquarePlay aliases
export { default as LucideSquarePlay } from '../icons/square-play';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePlay} instead. This alias will be removed in v1.0 */
default as LucidePlaySquare } from '../icons/square-play';
// SquarePlus aliases
export { default as LucideSquarePlus } from '../icons/square-plus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePlus} instead. This alias will be removed in v1.0 */
default as LucidePlusSquare } from '../icons/square-plus';
// SquarePower aliases
export { default as LucideSquarePower } from '../icons/square-power';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquarePower} instead. This alias will be removed in v1.0 */
default as LucidePowerSquare } from '../icons/square-power';
// SquareScissors aliases
export { default as LucideSquareScissors } from '../icons/square-scissors';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareScissors} instead. This alias will be removed in v1.0 */
default as LucideScissorsSquare } from '../icons/square-scissors';
// SquareSigma aliases
export { default as LucideSquareSigma } from '../icons/square-sigma';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSigma} instead. This alias will be removed in v1.0 */
default as LucideSigmaSquare } from '../icons/square-sigma';
// SquareSplitHorizontal aliases
export { default as LucideSquareSplitHorizontal } from '../icons/square-split-horizontal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSplitHorizontal} instead. This alias will be removed in v1.0 */
default as LucideSplitSquareHorizontal } from '../icons/square-split-horizontal';
// SquareSlash aliases
export { default as LucideSquareSlash } from '../icons/square-slash';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSlash} instead. This alias will be removed in v1.0 */
default as LucideSlashSquare } from '../icons/square-slash';
// SquareSplitVertical aliases
export { default as LucideSquareSplitVertical } from '../icons/square-split-vertical';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareSplitVertical} instead. This alias will be removed in v1.0 */
default as LucideSplitSquareVertical } from '../icons/square-split-vertical';
// SquareUserRound aliases
export { default as LucideSquareUserRound } from '../icons/square-user-round';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareUserRound} instead. This alias will be removed in v1.0 */
default as LucideUserSquare2 } from '../icons/square-user-round';
// SquareTerminal aliases
export { default as LucideSquareTerminal } from '../icons/square-terminal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareTerminal} instead. This alias will be removed in v1.0 */
default as LucideTerminalSquare } from '../icons/square-terminal';
// SquareUser aliases
export { default as LucideSquareUser } from '../icons/square-user';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareUser} instead. This alias will be removed in v1.0 */
default as LucideUserSquare } from '../icons/square-user';
// SquareX aliases
export { default as LucideSquareX } from '../icons/square-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link SquareX} instead. This alias will be removed in v1.0 */
default as LucideXSquare } from '../icons/square-x';
// TestTubeDiagonal aliases
export { default as LucideTestTubeDiagonal } from '../icons/test-tube-diagonal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TestTubeDiagonal} instead. This alias will be removed in v1.0 */
default as LucideTestTube2 } from '../icons/test-tube-diagonal';
// TextAlignCenter aliases
export { default as LucideTextAlignCenter } from '../icons/text-align-center';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextAlignCenter} instead. This alias will be removed in v1.0 */
default as LucideAlignCenter } from '../icons/text-align-center';
// TextAlignStart aliases
export { default as LucideTextAlignStart } from '../icons/text-align-start';
export { 
/** @deprecated The icon was combined with another icon that shares the same use case, use {@link TextAlignStart} instead. This alias will be removed in v1.0 */
default as LucideText } from '../icons/text-align-start';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextAlignStart} instead. This alias will be removed in v1.0 */
default as LucideAlignLeft } from '../icons/text-align-start';
// TextAlignJustify aliases
export { default as LucideTextAlignJustify } from '../icons/text-align-justify';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextAlignJustify} instead. This alias will be removed in v1.0 */
default as LucideAlignJustify } from '../icons/text-align-justify';
// TextAlignEnd aliases
export { default as LucideTextAlignEnd } from '../icons/text-align-end';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextAlignEnd} instead. This alias will be removed in v1.0 */
default as LucideAlignRight } from '../icons/text-align-end';
// TextInitial aliases
export { default as LucideTextInitial } from '../icons/text-initial';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextInitial} instead. This alias will be removed in v1.0 */
default as LucideLetterText } from '../icons/text-initial';
// TextWrap aliases
export { default as LucideTextWrap } from '../icons/text-wrap';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextWrap} instead. This alias will be removed in v1.0 */
default as LucideWrapText } from '../icons/text-wrap';
// TextSelect aliases
export { default as LucideTextSelect } from '../icons/text-select';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TextSelect} instead. This alias will be removed in v1.0 */
default as LucideTextSelection } from '../icons/text-select';
// TramFront aliases
export { default as LucideTramFront } from '../icons/tram-front';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TramFront} instead. This alias will be removed in v1.0 */
default as LucideTrain } from '../icons/tram-front';
// TreePalm aliases
export { default as LucideTreePalm } from '../icons/tree-palm';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TreePalm} instead. This alias will be removed in v1.0 */
default as LucidePalmtree } from '../icons/tree-palm';
// TriangleAlert aliases
export { default as LucideTriangleAlert } from '../icons/triangle-alert';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TriangleAlert} instead. This alias will be removed in v1.0 */
default as LucideAlertTriangle } from '../icons/triangle-alert';
// TvMinimal aliases
export { default as LucideTvMinimal } from '../icons/tv-minimal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link TvMinimal} instead. This alias will be removed in v1.0 */
default as LucideTv2 } from '../icons/tv-minimal';
// University aliases
export { default as LucideUniversity } from '../icons/university';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link University} instead. This alias will be removed in v1.0 */
default as LucideSchool2 } from '../icons/university';
// UserRoundCheck aliases
export { default as LucideUserRoundCheck } from '../icons/user-round-check';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundCheck} instead. This alias will be removed in v1.0 */
default as LucideUserCheck2 } from '../icons/user-round-check';
// UserRoundCog aliases
export { default as LucideUserRoundCog } from '../icons/user-round-cog';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundCog} instead. This alias will be removed in v1.0 */
default as LucideUserCog2 } from '../icons/user-round-cog';
// UserRoundMinus aliases
export { default as LucideUserRoundMinus } from '../icons/user-round-minus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundMinus} instead. This alias will be removed in v1.0 */
default as LucideUserMinus2 } from '../icons/user-round-minus';
// UserRoundPlus aliases
export { default as LucideUserRoundPlus } from '../icons/user-round-plus';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundPlus} instead. This alias will be removed in v1.0 */
default as LucideUserPlus2 } from '../icons/user-round-plus';
// UserRoundX aliases
export { default as LucideUserRoundX } from '../icons/user-round-x';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRoundX} instead. This alias will be removed in v1.0 */
default as LucideUserX2 } from '../icons/user-round-x';
// UserRound aliases
export { default as LucideUserRound } from '../icons/user-round';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UserRound} instead. This alias will be removed in v1.0 */
default as LucideUser2 } from '../icons/user-round';
// UsersRound aliases
export { default as LucideUsersRound } from '../icons/users-round';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UsersRound} instead. This alias will be removed in v1.0 */
default as LucideUsers2 } from '../icons/users-round';
// WalletMinimal aliases
export { default as LucideWalletMinimal } from '../icons/wallet-minimal';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link WalletMinimal} instead. This alias will be removed in v1.0 */
default as LucideWallet2 } from '../icons/wallet-minimal';
// UtensilsCrossed aliases
export { default as LucideUtensilsCrossed } from '../icons/utensils-crossed';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link UtensilsCrossed} instead. This alias will be removed in v1.0 */
default as LucideForkKnifeCrossed } from '../icons/utensils-crossed';
// Utensils aliases
export { default as LucideUtensils } from '../icons/utensils';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link Utensils} instead. This alias will be removed in v1.0 */
default as LucideForkKnife } from '../icons/utensils';
// WandSparkles aliases
export { default as LucideWandSparkles } from '../icons/wand-sparkles';
export { 
/** @deprecated The name of this icon was changed because it didn't meet our guidelines anymore, use {@link WandSparkles} instead. This alias will be removed in v1.0 */
default as LucideWand2 } from '../icons/wand-sparkles';
//# sourceMappingURL=data:application/json;base64,